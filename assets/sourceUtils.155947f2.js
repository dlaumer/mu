import{h5 as g,lW as y,r4 as w,r5 as I,r6 as _,lE as h,t as m,_ as b}from"./index.7ded6657.js";class v{constructor(){this.code=null,this.description=null}}class q{constructor(t){this.error=new v,this.globalId=null,this.objectId=null,this.success=!1,this.uniqueId=null,this.error.description=t}}function f(e){return new q(e)}class E{constructor(t){this.globalId=null,this.success=!0,this.objectId=this.uniqueId=t}}function F(e){return new E(e)}const a=new Set;function G(e,t,i,p=!1,u){var c;a.clear();for(const r in i){const n=e.get(r);if(!n)continue;const l=i[r],s=P(n,l);if(s!==l&&u&&u.push({name:"invalid-value-type",message:"attribute value was converted to match the field type",details:{field:n,originalValue:l,sanitizedValue:s}}),a.add(n.name),n&&(p||n.editable)){const d=I(n,s);if(d)return f(_(d,n,s));t[n.name]=s}}for(const r of(c=e==null?void 0:e.requiredFields)!=null?c:[])if(!a.has(r.name))return f(`missing required field "${r.name}"`);return null}function P(e,t){let i=t;return typeof t=="string"&&g(e)?i=parseFloat(t):t!=null&&y(e)&&typeof t!="string"&&(i=String(t)),w(i)}let o;function S(e,t){if(!e||!h(t))return e;if("rings"in e||"paths"in e){if(m(o))throw new TypeError("geometry engine not loaded");return o.simplify(t,e)}return e}async function V(){return m(o)&&(o=await b(()=>import("./geometryEngineJSON.7ef32ff7.js"),["assets/geometryEngineJSON.7ef32ff7.js","assets/geometryEngineBase.871c2f6a.js","assets/geometryEngineJSON.7d40f72f.js","assets/json.5152e73f.js"])),o}async function T(e,t){!h(e)||t!=="esriGeometryPolygon"&&t!=="esriGeometryPolyline"||await V()}export{f as a,F as f,S as g,G as m,T as w};
