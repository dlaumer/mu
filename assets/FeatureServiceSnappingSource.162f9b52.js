import{mx as N,tj as U,tk as j,aO as A,e_ as D,e as n,y as a,b as _,d as k,r as h,bd as J,i as H,mT as T,x as m,U as M,p as R,h as S,tl as V,t as Z,I as L,v as W,fK as q,ef as G,fw as B,fR as K,eg as Q,eT as X,j4 as Y,aS as ee,rb as te,bW as ie,a7 as F,tm as ne,lh as v,dG as re,o8 as se,aB as ae,k$ as oe,hM as P,tn as le}from"./index.f0b603e5.js";import{y as de}from"./elevationInfoUtils.1b829c91.js";import{i as pe,p as ue}from"./queryEngineUtils.bd4dcce2.js";import{b as he}from"./TileTreeDebugger.3d51e69f.js";import"./DimensionAnalysisView3D.2ce5e71d.js";import"./LineVisualElement.98f2f691.js";import"./LengthDimension.712a4a98.js";import"./Segment.b21fb86f.js";import"./analysisViewUtils.dc9a2936.js";import"./ImageMaterial.03469668.js";import"./Factory.64e9be4a.js";import"./RightAngleQuadVisualElement.e094d36b.js";import"./VisualElementResources.082d8281.js";import"./PointVisualElement.304a7905.js";import"./colorUtils.31a1b5d7.js";import"./EditGeometryOperations.1523212e.js";import"./QueryEngineResult.a34a99f5.js";import"./WhereClause.7eef08f1.js";import"./executionError.c4c51b90.js";import"./utils.a24099e7.js";import"./generateRendererUtils.8b94a88c.js";import"./json.5152e73f.js";import"./dehydratedFeatureComparison.d06fa8a6.js";import"./RenderTexture.88b033d3.js";import"./VertexSnappingCandidate.6903c0e5.js";function b(e,t){return U(t.extent,E),j(E,A(ce,e.x,e.y,0))}const E=N(),ce=D();let y=class extends k{get tiles(){const e=this.tilesCoveringView,t=h(this.pointOfInterest)?this.pointOfInterest:this.view.center;return e.sort((r,s)=>b(t,r)-b(t,s)),e}_scaleEnabled(){return J(this.view.scale,this.layer.minScale||0,this.layer.maxScale||0)}get tilesCoveringView(){if(!this.view.ready||!this.view.featuresTilingScheme||!this.view.state||H(this.tileInfo))return[];if(!this._scaleEnabled)return[];const{spans:e,lodInfo:t}=this.view.featuresTilingScheme.getTileCoverage(this.view.state,0),{level:r}=t,s=[];for(const{row:i,colFrom:l,colTo:d}of e)for(let o=l;o<=d;o++){const p=t.normalizeCol(o),g=new T(null,r,i,p);this.tileInfo.updateTileInfo(g),s.push(g)}return s}get tileInfo(){var e,t;return(t=(e=this.view.featuresTilingScheme)==null?void 0:e.tileInfo)!=null?t:null}get tileSize(){return h(this.tileInfo)?this.tileInfo.size[0]:256}constructor(e){super(e),this.pointOfInterest=null}initialize(){this.addHandles(m(()=>{var e,t;return(t=(e=this.view)==null?void 0:e.state)==null?void 0:t.viewpoint},()=>this.notifyChange("tilesCoveringView"),M))}};n([a({readOnly:!0})],y.prototype,"tiles",null),n([a({readOnly:!0})],y.prototype,"_scaleEnabled",null),n([a({readOnly:!0})],y.prototype,"tilesCoveringView",null),n([a({readOnly:!0})],y.prototype,"tileInfo",null),n([a({readOnly:!0})],y.prototype,"tileSize",null),n([a({constructOnly:!0})],y.prototype,"view",void 0),n([a({constructOnly:!0})],y.prototype,"layer",void 0),n([a()],y.prototype,"pointOfInterest",void 0),y=n([_("esri.views.interactive.snapping.featureSources.featureServiceSource.FeatureServiceTiles2D")],y);let f=class extends R{get tiles(){const e=this.tilesCoveringView,t=this._effectivePointOfInterest;if(h(t)){const r=e.map(s=>b(t,s));for(let s=1;s<r.length;s++)if(r[s-1]>r[s])return e.sort((i,l)=>b(t,i)-b(t,l)),e.slice()}return e}get tilesCoveringView(){var e,t;return this._filterTiles((t=(e=this.view.featureTiles)==null?void 0:e.tiles)==null?void 0:t.toArray()).map(ye)}get tileInfo(){var e,t;return(t=(e=this.view.featureTiles)==null?void 0:e.tilingScheme.toTileInfo())!=null?t:null}get tileSize(){var e,t;return(t=(e=this.view.featureTiles)==null?void 0:e.tileSize)!=null?t:256}get _effectivePointOfInterest(){var t;const e=this.pointOfInterest;return h(e)?e:(t=this.view.pointsOfInterest)==null?void 0:t.focus.location}constructor(e){super(e),this.pointOfInterest=null}initialize(){this.handles.add(m(()=>this.view.featureTiles,e=>{this.handles.remove(z),e&&this.handles.add(e.addClient(),z)},S))}_filterTiles(e){return H(e)?[]:e.filter(t=>Math.abs(t.measures.screenRect[3]-t.measures.screenRect[1])>fe&&t.measures.visibility===V.VISIBLE_ON_SURFACE)}};function ye({lij:[e,t,r],extent:s}){return new T(`${e}/${t}/${r}`,e,t,r,s)}n([a({readOnly:!0})],f.prototype,"tiles",null),n([a({readOnly:!0})],f.prototype,"tilesCoveringView",null),n([a({readOnly:!0})],f.prototype,"tileInfo",null),n([a({readOnly:!0})],f.prototype,"tileSize",null),n([a({constructOnly:!0})],f.prototype,"view",void 0),n([a()],f.prototype,"pointOfInterest",void 0),n([a()],f.prototype,"_effectivePointOfInterest",null),f=n([_("esri.views.interactive.snapping.featureSources.featureServiceSource.FeatureServiceTiles3D")],f);const fe=50,z="feature-tiles";let O=class extends he{constructor(e){super(e),this._handles=new Z}initialize(){const e=setInterval(()=>this._fetchDebugInfo(),2e3);this._handles.add(L(()=>clearInterval(e)))}destroy(){this._handles.destroy()}getTiles(){if(!this._debugInfo)return[];const e=new Map,t=new Map;this._debugInfo.storedTiles.forEach(i=>{e.set(i.data.id,i.featureCount)}),this._debugInfo.pendingTiles.forEach(i=>{e.set(i.data.id,i.featureCount),t.set(i.data.id,i.state)});const r=i=>{var o;const l=t.get(i),d=(o=e.get(i))!=null?o:"?";return l?`${l}:${d}
${i}`:`store:${d}
${i}`},s=new Map;return this._debugInfo.storedTiles.forEach(i=>{s.set(i.data.id,i.data)}),this._debugInfo.pendingTiles.forEach(i=>{s.set(i.data.id,i.data)}),Array.from(s.values()).map(i=>({lij:[i.level,i.row,i.col],geometry:W.fromExtent(q(i.extent,this.view.spatialReference)),label:r(i.id)}))}_fetchDebugInfo(){this.handle.getDebugInfo(null).then(e=>{this._debugInfo=e,this.update()})}};n([a({constructOnly:!0})],O.prototype,"handle",void 0),O=n([_("esri.views.interactive.snapping.featureSources.WorkerTileTreeDebugger")],O);let u=class extends R{get updating(){return this.updatingHandles.updating||this._workerHandleUpdating}constructor(e){super(e),this.schedule=null,this.hasZ=!1,this.elevationAlignPointsInFeatures=async t=>{const r=[];for(const{points:s}of t)for(const{z:i}of s)r.push(i);return{elevations:r,drapedObjectIds:new Set,failedObjectIds:new Set}},this.queryForSymbologySnapping=async()=>({candidates:[],sourceCandidateIndices:[]}),this.availability=0,this._workerHandleUpdating=!0,this._editId=0}destroy(){this._workerHandle.destroy()}initialize(){this._workerHandle=new ge(this.schedule,{alignElevation:async(e,{signal:t})=>({result:await this.elevationAlignPointsInFeatures(e.points,t)}),getSymbologyCandidates:async(e,{signal:t})=>({result:await this.queryForSymbologySnapping(e,t)})}),this.handles.add([this._workerHandle.on("notify-updating",({updating:e})=>this._workerHandleUpdating=e),this._workerHandle.on("notify-availability",({availability:e})=>this._set("availability",e))])}async setup(e,t){var i;const r=this._serviceInfoFromLayer(e.layer);if(H(r))return;const s={configuration:this._convertConfiguration(e.configuration),serviceInfo:r,spatialReference:e.spatialReference.toJSON(),hasZ:this.hasZ,elevationInfo:(i=e.layer.elevationInfo)==null?void 0:i.toJSON()};await this.updatingHandles.addPromise(this._workerHandle.invokeMethod("setup",s,t)),this.updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},t))}async configure(e,t){const r=this._convertConfiguration(e);await this.updatingHandles.addPromise(this._workerHandle.invokeMethod("configure",r,t)),this.updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},t))}async refresh(e){await this.updatingHandles.addPromise(this._workerHandle.invokeMethod("refresh",{},e)),this.updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},e))}async fetchCandidates(e,t){const r=e.point,s={distance:e.distance,mode:e.mode,point:G(r[0],r[1],r[2],e.coordinateHelper.spatialReference.toJSON()),types:e.types,filter:h(e.filter)?e.filter.toJSON():null};return this._workerHandle.invoke(s,t)}async updateTiles(e,t){const r={tiles:e.tiles,tileInfo:h(e.tileInfo)?e.tileInfo.toJSON():null,tileSize:e.tileSize};await this.updatingHandles.addPromise(this._workerHandle.invokeMethod("updateTiles",r,t)),this.updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},t))}async applyEdits(e,t){var d,o,p,g,$,C;const r=this._editId++,s={id:r};await this.updatingHandles.addPromise(this._workerHandle.invokeMethod("beginApplyEdits",s,t));const i=await this.updatingHandles.addPromise(B(e.result,t)),l={id:r,edits:{addedFeatures:(o=(d=i.addedFeatures)==null?void 0:d.map(({objectId:I})=>I).filter(h))!=null?o:[],deletedFeatures:(g=(p=i.deletedFeatures)==null?void 0:p.map(({objectId:I,globalId:x})=>({objectId:I,globalId:x})))!=null?g:[],updatedFeatures:(C=($=i.updatedFeatures)==null?void 0:$.map(({objectId:I})=>I).filter(h))!=null?C:[]}};await this.updatingHandles.addPromise(this._workerHandle.invokeMethod("endApplyEdits",l,t)),this.updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},t))}getDebugInfo(e){return this._workerHandle.invokeMethod("getDebugInfo",{},e)}async notifyElevationSourceChange(){await this._workerHandle.invokeMethod("notifyElevationSourceChange",{})}async notifySymbologyChange(){await this._workerHandle.invokeMethod("notifySymbologyChange",{})}async setSymbologySnappingSupported(e){await this._workerHandle.invokeMethod("setSymbologySnappingSupported",e)}_convertConfiguration(e){return{filter:h(e.filter)?e.filter.toJSON():null,customParameters:e.customParameters,viewType:e.viewType}}_serviceInfoFromLayer(e){var t,r,s;return e.geometryType==="multipatch"||e.geometryType==="mesh"?null:{url:(r=(t=e.parsedUrl)==null?void 0:t.path)!=null?r:"",fields:e.fields.map(i=>i.toJSON()),geometryType:K.toJSON(e.geometryType),capabilities:e.capabilities,objectIdField:e.objectIdField,globalIdField:e.globalIdField,spatialReference:e.spatialReference.toJSON(),timeInfo:(s=e.timeInfo)==null?void 0:s.toJSON()}}};n([a({constructOnly:!0})],u.prototype,"schedule",void 0),n([a({constructOnly:!0})],u.prototype,"hasZ",void 0),n([a({constructOnly:!0})],u.prototype,"elevationAlignPointsInFeatures",void 0),n([a({constructOnly:!0})],u.prototype,"queryForSymbologySnapping",void 0),n([a({readOnly:!0})],u.prototype,"updating",null),n([a({readOnly:!0})],u.prototype,"availability",void 0),n([a()],u.prototype,"_workerHandleUpdating",void 0),u=n([_("esri.views.interactive.snapping.featureSources.featureServiceSource.FeatureServiceSnappingSourceWorkerHandle")],u);class ge extends Q{constructor(t,r){super("FeatureServiceSnappingSourceWorker","fetchCandidates",{},t,{strategy:"dedicated",client:r})}}let w=class extends k{get tiles(){return[new T("0/0/0",0,0,0,X(-1e8,-1e8,1e8,1e8))]}get tileInfo(){return new Y({origin:new ee({x:-1e8,y:1e8,spatialReference:this.layer.spatialReference}),size:[512,512],lods:[new te({level:0,scale:1,resolution:390625})],spatialReference:this.layer.spatialReference})}get tileSize(){return this.tileInfo.size[0]}constructor(e){super(e),this.pointOfInterest=null}};n([a({readOnly:!0})],w.prototype,"tiles",null),n([a({readOnly:!0})],w.prototype,"tileInfo",null),n([a({readOnly:!0})],w.prototype,"tileSize",null),n([a({constructOnly:!0})],w.prototype,"layer",void 0),n([a()],w.prototype,"pointOfInterest",void 0),w=n([_("esri.views.interactive.snapping.featureSources.featureServiceSource.FeatureServiceTilesSimple")],w);let c=class extends ie(k){get _updateTilesParameters(){return{tiles:this._tilesOfInterest.tiles,tileInfo:this._tilesOfInterest.tileInfo,tileSize:this._tilesOfInterest.tileSize}}get updating(){var e;return((e=this._workerHandle)==null?void 0:e.updating)||this.updatingHandles.updating}get configuration(){const{view:e}=this,t=h(e)?e.type:"2d";return{filter:this._layer.createQuery(),customParameters:this._layer.customParameters,viewType:t}}get availability(){var e,t;return(t=(e=this._workerHandle)==null?void 0:e.availability)!=null?t:0}get _layer(){return this.layerSource.layer}constructor(e){super(e),this._workerHandle=null,this._debug=null}initialize(){var r;let e;const t=this.view;if(h(t))switch(t.type){case"2d":this._tilesOfInterest=new y({view:t,layer:this._layer}),e=this._workerHandle=new u;break;case"3d":{const{resourceController:s}=t,i=this._layer,l=t.whenLayerView(i);this._tilesOfInterest=new f({view:t}),e=this._workerHandle=new u({schedule:o=>s.immediate.schedule(o),hasZ:this._layer.hasZ&&((r=this._layer.returnZ)!=null?r:!0),elevationAlignPointsInFeatures:async(o,p)=>{const g=await l;return F(p),g.elevationAlignPointsInFeatures(o,p)},queryForSymbologySnapping:async(o,p)=>{const g=await l;return F(p),g.queryForSymbologySnapping(o,p)}});const d=new ne(null);l.then(o=>d.set(o)),this.addHandles([t.elevationProvider.on("elevation-change",({context:o})=>{const{elevationInfo:p}=i;de(o,p)&&v(e.notifyElevationSourceChange())}),m(()=>i.elevationInfo,()=>v(e.notifyElevationSourceChange()),S),m(()=>re(d.get(),({processor:o})=>o==null?void 0:o.renderer),()=>v(e.notifySymbologyChange()),S),m(()=>se(d.get(),!1,o=>o.symbologySnappingSupported),o=>v(e.setSymbologySnappingSupported(o)),S),ae(()=>{var o;return(o=oe(d.get()))==null?void 0:o.layer},["edits","apply-edits","graphic-update"],()=>e.notifySymbologyChange())]);break}}else this._tilesOfInterest=new w({layer:this._layer}),e=this._workerHandle=new u;this.handles.add([P(e)]),v(e.setup({layer:this._layer,spatialReference:this.spatialReference,configuration:this.configuration},null)),this.updatingHandles.add(()=>this._updateTilesParameters,()=>v(e.updateTiles(this._updateTilesParameters,null)),S),this.handles.add([m(()=>this.configuration,s=>v(e.configure(s,null)),M)]),h(t)&&this.handles.add(m(()=>le.FEATURE_SERVICE_SNAPPING_SOURCE_TILE_TREE_SHOW_TILES,s=>{s&&!this._debug?(this._debug=new O({view:t,handle:e}),this.handles.add(P(this._debug),"debug")):!s&&this._debug&&this.handles.remove("debug")},S)),this.handles.add(this.layerSource.layer.on("apply-edits",s=>{v(e.applyEdits(s,null))}))}refresh(){var e;(e=this._workerHandle)==null||e.refresh(null)}async fetchCandidates(e,t){const{coordinateHelper:r,point:s}=e;this._tilesOfInterest.pointOfInterest=r.arrayToPoint(s);const i=this._getGroundElevation;return(await this._workerHandle.fetchCandidates({...e},t)).candidates.map(l=>pe(l,i))}getDebugInfo(e){return this._workerHandle.getDebugInfo(e)}get _getGroundElevation(){return ue(this.view)}};n([a({constructOnly:!0})],c.prototype,"spatialReference",void 0),n([a({constructOnly:!0})],c.prototype,"layerSource",void 0),n([a({constructOnly:!0})],c.prototype,"view",void 0),n([a()],c.prototype,"_tilesOfInterest",void 0),n([a({readOnly:!0})],c.prototype,"_updateTilesParameters",null),n([a({readOnly:!0})],c.prototype,"updating",null),n([a({readOnly:!0})],c.prototype,"configuration",null),n([a({readOnly:!0})],c.prototype,"availability",null),n([a()],c.prototype,"_getGroundElevation",null),c=n([_("esri.views.interactive.snapping.featureSources.FeatureServiceSnappingSource")],c);export{c as FeatureServiceSnappingSource};
