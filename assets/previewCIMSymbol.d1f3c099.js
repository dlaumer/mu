import{eB as w,ss as b,sN as V,lz as P,sm as q}from"./index.766f8f29.js";import{s as D,i as x}from"./cimAnalyzer.52f8d017.js";import{GeometryStyle as G,CIMSymbolRasterizer as E}from"./CIMSymbolRasterizer.243b041f.js";import"./fontUtils.7ee2864e.js";import"./BidiEngine.f5b8c89f.js";import"./TileClipper.7b9dd3ce.js";import"./enums.89506096.js";import"./number.dcd3e86c.js";import"./_commonjsHelpers.4421ccc9.js";import"./imageutils.7fc35e64.js";import"./rasterizingUtils.05df73bb.js";const g=new E(null,!0),m=w(b.size),F=w(b.maxSize),L=w(b.lineWidth),k=1;function A(t){const e=t==null?void 0:t.size;return typeof e=="number"?{width:e,height:e}:{width:e!=null&&typeof e=="object"&&"width"in e?e.width:null,height:e!=null&&typeof e=="object"&&"height"in e?e.height:null}}async function Z(t,e={}){var I;const{node:M,opacity:v,symbolConfig:h}=e,j=typeof h=="object"&&"isSquareFill"in h&&h.isSquareFill,S=e.cimOptions||e,o=S.geometryType||V((I=t==null?void 0:t.data)==null?void 0:I.symbol),i=A(e),{feature:z,fieldMap:C}=S;if(i.width==null||i.height==null){const r=await D.resolveSymbolOverrides(t.data,z,null,C,o);if(!r)return null;(t=t.clone()).data={type:"CIMSymbolReference",symbol:r},t.data.primitiveOverrides=void 0;const p=[];x.fetchResources(r,g.resourceManager,p),p.length>0&&await Promise.all(p);const n=x.getEnvelope(r,null,g.resourceManager),f=n==null?void 0:n.width,d=n==null?void 0:n.height;i.width=o==="esriGeometryPolygon"?m:o==="esriGeometryPolyline"?L:f!=null&&isFinite(f)?Math.min(f,F):m,i.height=o==="esriGeometryPolygon"?m:d!=null&&isFinite(d)?Math.max(Math.min(d,F),k):m}const c=await g.rasterizeCIMSymbolAsync(t,z,i,j||o!=="esriGeometryPolygon"?G.Preview:G.Legend,C,o);if(!c)return null;const{width:O,height:R}=c,l=document.createElement("canvas");l.width=O,l.height=R,l.getContext("2d").putImageData(c,0,0);const u=P(i.width),y=P(i.height),s=new Image(u,y);s.src=l.toDataURL(),v!=null&&(s.style.opacity=`${v}`);let a=s;if(e.effectView!=null){const r={shape:{type:"image",x:0,y:0,width:u,height:y,src:s.src},fill:null,stroke:null,offset:[0,0]};a=q([[r]],[u,y],{effectView:e.effectView})}return M&&a&&M.appendChild(a),a}export{Z as previewCIMSymbol};
