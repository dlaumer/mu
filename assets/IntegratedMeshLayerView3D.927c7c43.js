import{mr as m,a6 as n,j as l,t as d,e as i,y as e,iJ as h,a as u}from"./index.c2b4fb6e.js";import{v as c}from"./I3SMeshView3D.08bfe523.js";import{n as g}from"./LayerView3D.22fe02a7.js";import{u as y}from"./LayerView.e649b0cd.js";import"./I3SOverrides.2698062a.js";import"./I3SNode.332c5ead.js";import"./I3SUtil.1e58a9c4.js";import"./I3SBinaryReader.79df5733.js";import"./RenderTexture.a0a012a6.js";import"./FeatureLayerView3D.7a3df420.js";import"./FeatureLayerViewBase3D.57c2d4e1.js";import"./FeatureLikeLayerView3D.84003d2d.js";import"./dehydratedFeatureComparison.baf40dde.js";import"./queryForSymbologySnapping.372db265.js";import"./elevationInfoUtils.61d72552.js";import"./hash.079e8d2d.js";import"./Graphics3DObjectStates.00695ba4.js";import"./rendererConversion.bf1e92f2.js";import"./optimizedFeatureQueryEngineAdapter.04eb7bfe.js";import"./centroid.bfde938e.js";import"./PooledRBush.53bd9abe.js";import"./quickselect.2c5f2780.js";import"./floorFilterUtils.4de71259.js";import"./QueryEngine.0d9a56b3.js";import"./QueryEngineResult.2ac072d4.js";import"./WhereClause.fb4e6ae7.js";import"./executionError.c4c51b90.js";import"./utils.51e2592f.js";import"./generateRendererUtils.935a3285.js";import"./json.5152e73f.js";import"./QueryEngineCapabilities.ea616409.js";import"./FeatureStore.4b890201.js";import"./BoundsStore.7be3138e.js";import"./projectExtentUtils.85b203bb.js";import"./EventedSet.6d14d441.js";import"./popupUtils.1c2a1560.js";import"./RefreshableLayerView.5fe5f7c4.js";import"./SceneModification.8c38e9b3.js";import"./persistable.758b5afb.js";import"./multiOriginJSONSupportUtils.6105c957.js";import"./resourceExtension.2d9abca0.js";import"./SceneLayerWorker.caa7fdf8.js";const v=.2;let r=class extends c(g(y)){constructor(){super(...arguments),this.type="integrated-mesh-3d",this._elevationContext="im",this._isIntegratedMesh=!0,this._supportsLabeling=!1,this.drapeTargetType=m.WithoutRasterImage}get i3slayer(){return this.layer}get updatingProgressValue(){var t,o;return(o=(t=this._controller)==null?void 0:t.updatingProgress)!=null?o:0}get lodFactor(){var t,o,a,s,p;return(p=(s=(a=(o=(t=this.view)==null?void 0:t.qualitySettings)==null?void 0:o.sceneService)==null?void 0:a.integratedMesh)==null?void 0:s.lodFactor)!=null?p:1}get progressiveLoadFactor(){return this.lodFactor>=1?v:1}get layerPopupEnabled(){return!1}initialize(){this.updatingHandles.add(()=>this.layer.modifications,()=>this._loadModifications(),n),this.view.basemapTerrain.overlayManager.registerDrapeTarget(this)}destroy(){this.view.basemapTerrain.overlayManager.unregisterDrapeTarget(this)}_createLayerGraphic(){const t=new l;return t.layer=this.layer,t.sourceLayer=this.layer,t}canResume(){return super.canResume()&&(!this._controller||this._controller.rootNodeVisible)}_loadModifications(){if(this.handles.remove("modifications"),d(this.layer.modifications))return void(this._modifications=[]);const t=this.layer.modifications;this.handles.add(this.updatingHandles.addOnCollectionChange(()=>t,()=>this._modifications=t.toArray(),n),"modifications")}};i([e()],r.prototype,"layer",void 0),i([e()],r.prototype,"i3slayer",null),i([e(h)],r.prototype,"updatingProgress",void 0),i([e()],r.prototype,"updatingProgressValue",null),i([e()],r.prototype,"lodFactor",null),i([e({readOnly:!0})],r.prototype,"progressiveLoadFactor",null),r=i([u("esri.views.3d.layers.SceneLayerView3D")],r);const st=r;export{st as default};
