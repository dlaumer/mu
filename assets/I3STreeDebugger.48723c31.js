import{r as d,i as c,ek as S,ak as r,bb as u,dU as p,v as y,e as o,y as f,b as v,dy as g,an as z}from"./index.f0b603e5.js";import{b as j}from"./TileTreeDebugger.3d51e69f.js";let h=class extends j{constructor(n){super(n)}getTiles(){const n=this.lv.getVisibleNodes(),i=this.view.renderSpatialReference,l=this.nodeSR;return n.map(t=>m(t,i,l)).filter(d).sort((t,s)=>t.lij[0]===s.lij[0]?t.label>s.label?-1:1:t.lij[0]-s.lij[0])}};function m(n,i,l){const t=n.serviceObb;if(c(t)||c(i))return null;S(a,t.quaternion),r(e,t.center),u(e,l,0,e,i,0,1),a[12]=e[0],a[13]=e[1],a[14]=e[2];const s=[[],[],[]];r(e,t.halfSize),p(e,e,a),u(e,i,0,e,l,0,1),s[0].push([e[0],e[1]]),r(e,t.halfSize),e[0]=-e[0],p(e,e,a),u(e,i,0,e,l,0,1),s[0].push([e[0],e[1]]),r(e,t.halfSize),e[0]=-e[0],e[1]=-e[1],p(e,e,a),u(e,i,0,e,l,0,1),s[0].push([e[0],e[1]]),r(e,t.halfSize),e[1]=-e[1],p(e,e,a),u(e,i,0,e,l,0,1),s[0].push([e[0],e[1]]),s[1].push(s[0][0]),s[1].push(s[0][1]),r(e,t.halfSize),e[0]=-e[0],e[2]=-e[2],p(e,e,a),u(e,i,0,e,l,0,1),s[1].push([e[0],e[1]]),r(e,t.halfSize),e[2]=-e[2],p(e,e,a),u(e,i,0,e,l,0,1),s[1].push([e[0],e[1]]),s[2].push(s[0][0]),s[2].push(s[0][3]),r(e,t.halfSize),e[1]=-e[1],e[2]=-e[2],p(e,e,a),u(e,i,0,e,l,0,1),s[2].push([e[0],e[1]]),s[2].push(s[1][3]);const b=new y({rings:s,spatialReference:l});return{lij:[n.level,n.childCount,0],label:n.id,geometry:b}}o([f({constructOnly:!0})],h.prototype,"lv",void 0),o([f({constructOnly:!0})],h.prototype,"nodeSR",void 0),h=o([v("esri.views.3d.layers.support.I3STreeDebugger")],h);const a=g(),e=z();export{h as I3STreeDebugger};
