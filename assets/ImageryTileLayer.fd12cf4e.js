import{dv as mt,cO as pt,dp as pe,r as C,fM as st,O as Ee,d as $,fn as rt,bx as q,w as G,t as B,b as X,U as nt,E as yt,ds as at,cS as gt,e as w,y as b,dU as ot,a as Q,f as j,fN as xt,I as lt,Y as ct,h as It,eR as wt,B as bt,L as St,dl as Rt,dm as vt,dq as Tt,dx as _t,eU as kt,eX as Ct,dw as Ft,dn as Pt,dr as Mt,aq as $t,dA as Ot,e_ as me,dJ as Bt,am as Dt,dH as zt,dt as Et,f2 as Jt,dO as Nt,dC as Ht}from"./index.c2b4fb6e.js";import{g as ut,y as Lt,e as At,s as Wt,p as ht,c as qt,w as Be,l as ft,h as Le,q as jt,r as Ae,$ as We,S as qe,v as Gt,V as Ut,L as Vt,j as je,n as Xt,m as Yt,a as Kt,o as Qt,d as Zt}from"./fetchRasterInfo.e95ed0bc.js";import{i as Ce,S as ei,a as ye,F as ti,D as ii,k as si,b as ri,e as ni,f as ai,T as oi,r as Ge,u as ge,R as li,p as ci,o as Je,j as ui,q as hi,m as fi,s as di,t as mi,N as pi,U as yi,w as gi,x as we,B as xi,L as Ii,z as wi}from"./dataUtils.08ed60c6.js";import{T as Ue,U as be,j as Ve,o as Xe,n as bi,Q as Fe,J as Pe,$ as Si,V as Ri,C as vi}from"./rasterProjectionHelper.3ee8a0a7.js";import{u as Ti}from"./pixelRangeUtils.eec66021.js";import{C as De,f as _i,i as ki,m as Ne,c as Ci,h as Fi}from"./utils.f5c989f0.js";import{n as Pi,z as Mi}from"./TilemapCache.c51d4c38.js";import"./generateRendererUtils.935a3285.js";class $i{constructor(e=15e3,r=5e3){this._timer=null,this._cachedBlocks=new Map,this._size=-1,this._duration=e,this._interval=Math.min(e,r)}decreaseRefCount(e,r){const i=e+"/"+r,s=this._cachedBlocks;if(s.has(i)){const n=s.get(i);return n.refCount--,n.refCount<=0&&(s.delete(i),n.controller&&n.controller.abort()),n.refCount}return 0}getBlock(e,r){const i=e+"/"+r,s=this._cachedBlocks;if(s.has(i)){const n=s.get(i);return n.ts=Date.now(),n.refCount++,s.delete(i),s.set(i,n),n.block}return null}putBlock(e,r,i,s){const n=this._cachedBlocks,a=e+"/"+r;if(n.has(a)){const l=n.get(a);l.ts=Date.now(),l.refCount++}else n.set(a,{block:i,ts:Date.now(),refCount:1,controller:s});this._trim(),this._updateTimer()}deleteBlock(e,r){const i=this._cachedBlocks,s=e+"/"+r;i.has(s)&&i.delete(s)}updateMaxSize(e){this._size=e,this._trim()}empty(){this._cachedBlocks.clear(),this._clearTimer()}getCurrentSize(){return this._cachedBlocks.size}_updateTimer(){if(this._timer!=null)return;const e=this._cachedBlocks;this._timer=setInterval(()=>{const r=Array.from(e),i=Date.now();for(let s=0;s<r.length&&r[s][1].ts<=i-this._duration;s++)e.delete(r[s][0]);e.size===0&&this._clearTimer()},this._interval)}_trim(){const e=this._cachedBlocks;if(this._size===-1||this._size>=e.size)return;const r=Array.from(e);for(let i=0;i<r.length-this._size;i++)e.delete(r[i][0])}_clearTimer(){this._timer!=null&&(clearInterval(this._timer),this._timer=null)}}const Te=new Map,te=new $i;function Ye(t,e){return e==null?t:`${t}?sliceId=${e}`}function Oi(t,e,r){var a,l;const i=Te.get(t);if(!i)return e==null?te.decreaseRefCount(t,r):0;if(e==null||i[e]==null)return te.decreaseRefCount(t,r);const s=(a=i[e])==null?void 0:a.cache,n=s==null?void 0:s.get(r);if(s&&n){if(n.refCount--,n.refCount===0){s.delete(r);for(let o=0;o<i.length;o++)(l=i[o])==null||l.cache.delete(r);n.controller&&n.controller.abort()}return n.refCount}return 0}function Ke(t,e,r){var n,a,l;const i=Te.get(t);if(!i)return e==null?te.getBlock(t,r):null;if(e==null||i[e]==null){for(let o=0;o<i.length;o++){const c=(n=i[o])==null?void 0:n.cache.get(r);if(c)return c.refCount++,c.block}return te.getBlock(t,r)}const s=(a=i[e])==null?void 0:a.cache.get(r);if(s)return s.refCount++,s.block;for(let o=0;o<i.length;o++){if(o===e||!i[o])continue;const c=(l=i[o])==null?void 0:l.cache,u=c==null?void 0:c.get(r);if(c&&u)return u.refCount++,c.set(r,u),u.block}return null}function Qe(t,e,r,i,s=null){var l;const n=Te.get(t);if(!n)return void(e==null&&te.putBlock(t,r,i,s));if(e==null||n[e]==null)return void te.putBlock(t,r,i,s);const a={refCount:1,block:i,isResolved:!1,isRejected:!1,controller:s};i.then(()=>a.isResolved=!0).catch(()=>a.isRejected=!0),(l=n[e])==null||l.cache.set(r,a)}function Bi(t,e,r){var s;const i=Te.get(t);i?e!=null&&i[e]!=null?(s=i[e])==null||s.cache.delete(r):te.deleteBlock(t,r):e==null&&te.deleteBlock(t,r)}const Ze=8,Di=256;let U=class extends mt(pt){constructor(){super(...arguments),this.rasterJobHandler=null,this.datasetName=null,this.datasetFormat=null,this.hasUniqueSourceStorageInfo=!0,this.rasterInfo=null,this.ioConfig={sampling:"closest"}}async init(){const t=Ue();this.addResolvingPromise(t),await this.when()}normalizeCtorArgs(t){return t&&t.ioConfig&&(t={...t,ioConfig:{resolution:null,bandIds:null,sampling:"closest",tileInfo:pe.create(),...t.ioConfig}}),t}get _isGlobalWrappableSource(){const{rasterInfo:t}=this,e=be(t.spatialReference);return C(e)&&t.extent.width>=e/2}set url(t){this._set("url",st(t,Ee.getLogger(this.declaredClass)))}async open(t){throw new $("BaseRaster:open-not-implemented","open() is not implemented")}async fetchTile(t,e,r,i={}){const s=i.tileInfo||this.rasterInfo.storageInfo.tileInfo,n=this.getTileExtentFromTileInfo(t,e,r,s);return this.fetchPixels(n,s.size[0],s.size[1],i)}async identify(t,e={}){var P,M;t=rt(q,t).clone().normalize();const{multidimensionalDefinition:r,timeExtent:i}=e,{rasterInfo:s}=this,{hasMultidimensionalTranspose:n,multidimensionalInfo:a}=s;let{transposedVariableName:l}=e;const o=C(a)&&n&&(i!=null||ut(r));o&&!l&&(l=C(r)&&r.length>0?(P=r[0].variableName)!=null?P:void 0:a.variables[0].name,e={...e,transposedVariableName:l}),e=this._getRequestOptionsWithSliceId(e);const{spatialReference:c,extent:u}=s,{datumTransformation:h}=e;let f=Ve(t,c,h);if(!u.intersects(f))return{location:f,value:null};if(C(s.transform)){const D=s.transform.inverseTransform(f);if(!s.nativeExtent.intersects(D))return{location:D,value:null};f=D}let m=0;const y=C(l)&&C(a)&&s.hasMultidimensionalTranspose;if(this.datasetFormat==="Function"){const D=this.primaryRasters.rasters[0];if(y)return D.identify(f,e);const{pixelSize:N}=s,O=3,H=N.x*O/2,L=N.y*O/2,J=new G({xmin:f.x-H,xmax:f.x+H,ymin:f.y-L,ymax:f.y+L,spatialReference:c}),A={interpolation:"nearest"},{pixelBlock:z}=await D.fetchPixels(J,O,O,A),{pixelBlock:Z}=await this.fetchPixels(J,O,O,A);if(B(z))return{location:f,value:null};const ie=Math.floor(O*O*.5),xe=!z.mask||z.mask[ie]?z.pixels.map(ke=>ke[ie]):null;let Ie;return C(Z)&&(Ie=!Z.mask||Z.mask[ie]?Z.pixels.map(ke=>ke[ie]):void 0),{location:f,value:xe,processedValue:Ie,pyramidLevel:0}}if(!y){if(e.srcResolution)m=Xe(e.srcResolution,s,this.ioConfig.sampling).pyramidLevel;else if(m=await this.computeBestPyramidLevelForLocation(t,e),m==null)return{location:f,value:null}}const g=this.identifyPixelLocation(f,m,null,y);if(g===null)return{location:f,value:null};const{row:d,col:p,rowOffset:I,colOffset:x,blockWidth:k}=g,T=l!=null?l:X(e.sliceId),_=Ye(this.url,T),S=`${m}/${d}/${p}`;let F=Ke(_,null,S);B(F)&&(F=this.fetchRawTile(m,d,p,e),Qe(_,null,S,F));const R=await F;if(B(R)||!((M=R.pixels)!=null&&M.length))return{location:f,value:null};const v=I*k+x;return this._processIdentifyResult(R,{srcLocation:f,position:v,pyramidLevel:m,useTransposedTile:!!y,requestSomeSlices:o,identifyOptions:e})}async fetchPixels(t,e,r,i={}){if(t=bi(t),(i=this._getRequestOptionsWithSliceId(i)).requestRawData)return this._fetchPixels(t,e,r,i);const s=be(t.spatialReference),n=Fe(t);if(B(s)||n===0||n===1&&this._isGlobalWrappableSource)return this._fetchPixels(t,e,r,i);if(n>=3)return{extent:t,pixelBlock:null};const a=[],{xmin:l,xmax:o}=t,c=Math.round(s/(o-l)*e),u=c-Math.round((s/2-l)/(o-l)*e);let h=0;const f=[];for(let d=0;d<=n;d++){const p=new G({xmin:d===0?l:-s/2,xmax:d===n?o-s*d:s/2,ymin:t.ymin,ymax:t.ymax,spatialReference:t.spatialReference}),I=d===0?c-u:d===n?e-h:c;h+=I,f.push(I);const x=i.disableWrapAround&&d>0?null:this._fetchPixels(p,I,r,i);a.push(x)}const m=(await Promise.all(a)).map(d=>d==null?void 0:d.pixelBlock);let y=null;const g={width:e,height:r};return this.rasterJobHandler?y=(await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:m,srcMosaicSize:g,destDimension:null,coefs:null,sampleSpacing:null,interpolation:"nearest",alignmentInfo:null,blockWidths:f},i)).pixelBlock:y=Ce(m,g,{blockWidths:f}),{extent:t,srcExtent:Pe(t,this.rasterInfo.spatialReference,i.datumTransformation),pixelBlock:y}}async fetchRawPixels(t,e,r,i={}){e={x:Math.floor(e.x),y:Math.floor(e.y)};const s=await this._fetchRawTiles(t,e,r,i),{nativeExtent:n,nativePixelSize:a,storageInfo:l}=this.rasterInfo,o=2**t,c=a.x*o,u=a.y*o,h=new G({xmin:n.xmin+c*e.x,xmax:n.xmin+c*(e.x+r.width-1),ymin:n.ymax-u*(e.y+r.height-1),ymax:n.ymax-u*e.y,spatialReference:n.spatialReference});if(!s)return{extent:h,srcExtent:h,pixelBlock:null};const{pixelBlocks:f,mosaicSize:m}=s;if(f.length===1&&C(f[0])&&f[0].width===r.width&&f[0].height===r.height)return{extent:h,srcExtent:h,pixelBlock:s.pixelBlocks[0]};const y=t>0?l.pyramidBlockWidth:l.blockWidth,g=t>0?l.pyramidBlockHeight:l.blockHeight,d={x:e.x%y,y:e.y%g};let p;return this.rasterJobHandler?p=(await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:f,srcMosaicSize:m,destDimension:r,clipOffset:d,clipSize:r,coefs:null,sampleSpacing:null,interpolation:i.interpolation,alignmentInfo:null,blockWidths:null},i)).pixelBlock:p=Ce(f,m,{clipOffset:d,clipSize:r}),{extent:h,srcExtent:h,pixelBlock:p}}fetchRawTile(t,e,r,i){throw new $("BaseRaster:read-not-implemented","fetchRawTile() is not implemented")}computeExtent(t){return Pe(this.rasterInfo.extent,t)}decodePixelBlock(t,e){return!this.rasterJobHandler||e.useCanvas?ei(t,e):this.rasterJobHandler.decode({data:t,options:e})}async request(t,e,r=0){var o;const{customFetchParameters:i}=this.ioConfig,{range:s,query:n,headers:a}=e;r=(o=r!=null?r:e.retryCount)!=null?o:this.ioConfig.retryCount;const l=s?{Range:`bytes=${s.from}-${s.to}`}:null;try{return await nt(t,{...e,query:{...n,...i},headers:{...a,...l}})}catch(c){if(r>0)return r--,this.request(t,e,r);throw c}}getSliceIndex(t){const{multidimensionalInfo:e}=this.rasterInfo;return B(e)||B(t)||t.length===0?null:Lt(t,e)}getTileExtentFromTileInfo(t,e,r,i){const s=yt(i.lodAt(t));return this.getTileExtent({x:s.resolution,y:s.resolution},e,r,i.origin,i.spatialReference,i.size)}updateTileInfo(){const{storageInfo:t,spatialReference:e,extent:r,pixelSize:i}=this.rasterInfo;if(!t.tileInfo){const s=[],n=t.maximumPyramidLevel||0;let a=Math.max(i.x,i.y),l=1/.0254*96*a;for(let c=0;c<=n;c++)s.push(new at({level:n-c,resolution:a,scale:l})),a*=2,l*=2;const o=new q({x:r.xmin,y:r.ymax,spatialReference:e});t.tileInfo=new pe({origin:o,size:[t.blockWidth,t.blockHeight],spatialReference:e,lods:s}),t.isVirtualTileInfo=!0}}createRemoteDatasetStorageInfo(t,e=512,r=512,i){const{width:s,height:n,nativeExtent:a,pixelSize:l,spatialReference:o}=t,c=new q({x:a.xmin,y:a.ymax,spatialReference:o});i==null&&(i=Math.max(0,Math.round(Math.log(Math.max(s,n))/Math.LN2-8)));const u=this.computeBlockBoundary(a,512,512,{x:a.xmin,y:a.ymax},[l],i);t.storageInfo=new ye({blockWidth:e,blockHeight:r,pyramidBlockWidth:e,pyramidBlockHeight:r,origin:c,firstPyramidLevel:1,maximumPyramidLevel:i,blockBoundary:u})}async computeBestPyramidLevelForLocation(t,e={}){return 0}computeBlockBoundary(t,e,r,i,s,n=0,a=2){if(s.length===1&&n>0){s=[...s];let{x:u,y:h}=s[0];for(let f=0;f<n;f++)u*=a,h*=a,s.push({x:u,y:h})}const l=[],{x:o,y:c}=i;for(let u=0;u<s.length;u++){const{x:h,y:f}=s[u];l.push({minCol:Math.floor((t.xmin-o+.1*h)/e/h),maxCol:Math.floor((t.xmax-o-.1*h)/e/h),minRow:Math.floor((c-t.ymax+.1*f)/r/f),maxRow:Math.floor((c-t.ymin-.1*f)/r/f)})}return l}getPyramidPixelSize(t){const{nativePixelSize:e}=this.rasterInfo,{pyramidResolutions:r,pyramidScalingFactor:i}=this.rasterInfo.storageInfo;if(t===0)return e;if(C(r)&&r.length)return r[t-1];const s=i**t;return{x:e.x*s,y:e.y*s}}identifyPixelLocation(t,e,r,i){const{spatialReference:s,nativeExtent:n,storageInfo:a}=this.rasterInfo,{maximumPyramidLevel:l,origin:o,transposeInfo:c}=a,u=i&&C(c)?c.tileSize[0]:a.blockWidth,h=i&&C(c)?c.tileSize[1]:a.blockHeight,f=Ve(t,s,r);if(!n.intersects(f)||e<0||e>l)return null;const m=this.getPyramidPixelSize(e),{x:y,y:g}=m,d=(o.y-f.y)/g/h,p=(f.x-o.x)/y/u,I=Math.min(h-1,Math.floor((d-Math.floor(d))*h)),x=Math.min(u-1,Math.floor((p-Math.floor(p))*u));return{pyramidLevel:e,row:Math.floor(d),col:Math.floor(p),rowOffset:I,colOffset:x,blockWidth:u,srcLocation:f}}getTileExtent(t,e,r,i,s,n){const[a,l]=n,o=i.x+r*a*t.x,c=o+a*t.x,u=i.y-e*l*t.y,h=u-l*t.y;return new G({xmin:o,xmax:c,ymin:h,ymax:u,spatialReference:s})}getBlockWidthHeight(t){return{blockWidth:t>0?this.rasterInfo.storageInfo.pyramidBlockWidth:this.rasterInfo.storageInfo.blockWidth,blockHeight:t>0?this.rasterInfo.storageInfo.pyramidBlockHeight:this.rasterInfo.storageInfo.blockHeight}}isBlockOutside(t,e,r){const i=this.rasterInfo.storageInfo.blockBoundary[t];return!i||i.maxRow<e||i.maxCol<r||i.minRow>e||i.minCol>r}async _fetchPixels(t,e,r,i={}){let s=Fe(t);if(s>=2)return{extent:t,pixelBlock:null};const n=this._getSourceDataInfo(t,e,r,i),{pyramidLevel:a,pyramidResolution:l,srcResolution:o,srcExtent:c,srcWidth:u,srcHeight:h}=n;if(u===0||h===0)return{extent:t,srcExtent:c,pixelBlock:null};const f=X(this.rasterInfo.transform),m=(f==null?void 0:f.type)==="gcs-shift",y=C(be(t.spatialReference));!m&&y||(s=Fe(n.srcExtent,m));const g=this.rasterInfo.storageInfo,d={x:Math.floor((c.xmin-g.origin.x)/l.x+.1),y:Math.floor((g.origin.y-c.ymax)/l.y+.1)},p=await this._fetchRawTiles(a,d,{width:u,height:h,wrapCount:s},i);if(!p)return{extent:t,srcExtent:c,pixelBlock:null};const I=a>0?g.pyramidBlockWidth:g.blockWidth,x=a>0?g.pyramidBlockHeight:g.blockHeight,k=I===u&&x===h&&d.x%I==0&&d.y%x==0,T=new q({x:(t.xmax-t.xmin)/e,y:(t.ymax-t.ymin)/r,spatialReference:t.spatialReference}),_=!t.spatialReference.equals(this.rasterInfo.spatialReference),{datumTransformation:S}=i;if(!_&&k&&p.pixelBlocks.length===1&&I===e&&x===r&&o.x===T.x&&o.y===T.y)return{extent:t,srcExtent:c,pixelBlock:p.pixelBlocks[0]};const F=y&&C(be(c.spatialReference)),R=i.requestProjectedLocalDirections&&this.rasterInfo.dataType.startsWith("vector");R&&!this.rasterJobHandler&&await Ue();const v=this.rasterJobHandler?await this.rasterJobHandler.getProjectionOffsetGrid({projectedExtent:t,srcBufferExtent:p.extent,pixelSize:T.toJSON(),datumTransformation:S,rasterTransform:f,hasWrapAround:s>0||F,isAdaptive:this.ioConfig.optimizeProjectionAccuracy!==!1,includeGCSGrid:R},i):Si({projectedExtent:t,srcBufferExtent:p.extent,pixelSize:T,datumTransformation:S,rasterTransform:f,hasWrapAround:s>0||F,isAdaptive:!1,includeGCSGrid:R});let P;const M=!i.requestRawData,D={rows:v.spacing[0],cols:v.spacing[1]},N=X(this._getRasterTileAlignmentInfo(a,p.extent.xmin)),{pixelBlocks:O,mosaicSize:H,isPartiallyFilled:L}=p;let J=null;if(this.rasterJobHandler)({pixelBlock:P,localNorthDirections:J}=await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:O,srcMosaicSize:H,destDimension:M?{width:e,height:r}:null,coefs:M?v.coefficients:null,sampleSpacing:M?D:null,projectDirections:R,gcsGrid:R?v.gcsGrid:null,isUV:this.rasterInfo.dataType==="vector-uv",interpolation:i.interpolation,alignmentInfo:N,blockWidths:null},i));else{const A=Ce(O,H,{alignmentInfo:N});P=M?ti(A,{width:e,height:r},v.coefficients,D,i.interpolation):A,R&&v.gcsGrid&&(J=ii({width:e,height:r},v.gcsGrid),P=si(P,this.rasterInfo.dataType,J))}return i.requestRawData||R?{srcExtent:c,pixelBlock:P,transformGrid:v,localNorthDirections:J,extent:t,isPartiallyFilled:L}:{srcExtent:c,extent:t,pixelBlock:P}}async _fetchRawTiles(t,e,r,i){const{origin:s,blockBoundary:n}=this.rasterInfo.storageInfo,{blockWidth:a,blockHeight:l}=this.getBlockWidthHeight(t);let{x:o,y:c}=e,{width:u,height:h,wrapCount:f}=r;const m=this._getRasterTileAlignmentInfo(t,0);i.buffer&&(o-=i.buffer.cols,c-=i.buffer.rows,u+=2*i.buffer.cols,h+=2*i.buffer.rows);let y=0,g=0,d=0;f&&C(m)&&({worldColumnCountFromOrigin:g,originColumnOffset:d,rightPadding:y}=m,g*m.blockWidth-y>=o+u&&(y=0));const p=Math.floor(o/a),I=Math.floor(c/l),x=Math.floor((o+u+y-1)/a),k=Math.floor((c+h+y-1)/l),T=n[t];if(!T)return null;const{minRow:_,minCol:S,maxCol:F,maxRow:R}=T;if(f===0&&(k<_||x<S||I>R||p>F))return null;const v=new Array;let P=!1;const M=this.ioConfig.allowPartialFill==null?i.allowPartialFill:this.ioConfig.allowPartialFill;for(let A=I;A<=k;A++)for(let z=p;z<=x;z++){let Z=z;if(!i.disableWrapAround&&f&&C(m)&&g<=z&&(Z=z-g-d),A>=_&&Z>=S&&R>=A&&F>=Z){const ie=this._fetchRawTile(t,A,Z,i);M?v.push(new Promise(xe=>{ie.then(Ie=>xe(Ie)).catch(()=>{P=!0,xe(null)})})):v.push(ie)}else v.push(Promise.resolve(null))}if(v.length===0)return null;const D=await Promise.all(v),N={height:(k-I+1)*l,width:(x-p+1)*a},{spatialReference:O}=this.rasterInfo,H=this.getPyramidPixelSize(t),{x:L,y:J}=H;return{extent:new G({xmin:s.x+p*a*L,xmax:s.x+(x+1)*a*L,ymin:s.y-(k+1)*l*J,ymax:s.y-I*l*J,spatialReference:O}),pixelBlocks:D,mosaicSize:N,isPartiallyFilled:P}}_fetchRawTile(t,e,r,i){const s=this.rasterInfo.storageInfo.blockBoundary[t];if(!s)return Promise.resolve(null);const{minRow:n,minCol:a,maxCol:l,maxRow:o}=s;if(e<n||r<a||e>o||r>l)return Promise.resolve(null);const c=Ye(this.url,i.sliceId),u=`${t}/${e}/${r}`;let h=Ke(c,i.registryId,u);if(B(h)){const f=new AbortController;h=this.fetchRawTile(t,e,r,{...i,signal:f.signal}),Qe(c,i.registryId,u,h,f),h.catch(()=>Bi(c,i.registryId,u))}return i.signal&&gt(i,()=>{Oi(c,i.registryId,u)}),h}_computeMagDirValues(t){var o;const{bandCount:e,dataType:r}=this.rasterInfo;if(!(e===2&&r==="vector-magdir"||r==="vector-uv")||(t==null?void 0:t.length)!==2||!((o=t[0])!=null&&o.length))return null;const i=t[0].length;if(r==="vector-magdir"){const c=t[1].map(u=>(u+360)%360);return[t[0],c]}const[s,n]=t,a=[],l=[];for(let c=0;c<i;c++){const[u,h]=ri([s[c],n[c]]);a.push(u),l.push(h)}return[a,l]}_getRasterTileAlignmentInfo(t,e){return this._rasterTileAlighmentInfo==null&&(this._rasterTileAlighmentInfo=Ri(this.rasterInfo)),B(this._rasterTileAlighmentInfo.pyramidsInfo)?null:{startX:e,halfWorldWidth:this._rasterTileAlighmentInfo.halfWorldWidth,hasGCSSShiftTransform:this._rasterTileAlighmentInfo.hasGCSSShiftTransform,...this._rasterTileAlighmentInfo.pyramidsInfo[t]}}_getSourceDataInfo(t,e,r,i={}){const s={datumTransformation:i.datumTransformation,pyramidLevel:0,pyramidResolution:null,srcExtent:null,srcHeight:0,srcResolution:null,srcWidth:0};i.srcResolution&&(s.srcResolution=i.srcResolution,this._updateSourceDataInfo(t,s));const n=this.rasterInfo.storageInfo.maximumPyramidLevel||0,{srcWidth:a,srcHeight:l,pyramidLevel:o}=s,c=a/e,u=l/r,h=o<n&&c*u>=16,f=o===n&&this._requireTooManySrcTiles(a,l,e,r);if(h||f||a===0||l===0){const m=new q({x:(t.xmax-t.xmin)/e,y:(t.ymax-t.ymin)/r,spatialReference:t.spatialReference});let y=vi(m,this.rasterInfo.spatialReference,t,s.datumTransformation);const g=!y||i.srcResolution&&y.x+y.y<i.srcResolution.x+i.srcResolution.y;if(h&&i.srcResolution&&g){const d=Math.round(Math.log(Math.max(c,u))/Math.LN2)-1;if(n-o+3>=d){const p=2**d;y={x:i.srcResolution.x*p,y:i.srcResolution.y*p}}}y&&(s.srcResolution=y,this._updateSourceDataInfo(t,s))}return this._requireTooManySrcTiles(s.srcWidth,s.srcHeight,e,r)&&(s.srcWidth=0,s.srcHeight=0),s}_requireTooManySrcTiles(t,e,r,i){const{tileInfo:s}=this.rasterInfo.storageInfo;return Math.ceil(t/s.size[0])*Math.ceil(e/s.size[1])>=Di||t/r>Ze||e/i>Ze}_updateSourceDataInfo(t,e){e.srcWidth=0,e.srcHeight=0;const r=this.rasterInfo.spatialReference,{srcResolution:i,datumTransformation:s}=e,{pyramidLevel:n,pyramidResolution:a,excessiveReading:l}=Xe(i,this.rasterInfo,this.ioConfig.sampling);if(l)return;let o=e.srcExtent||Pe(t,r,s);if(o==null)return;const c=X(this.rasterInfo.transform);c&&(o=c.inverseTransform(o)),e.srcExtent=o;const u=Math.ceil((o.xmax-o.xmin)/a.x-.1),h=Math.ceil((o.ymax-o.ymin)/a.y-.1);e.pyramidLevel=n,e.pyramidResolution=a,e.srcWidth=u,e.srcHeight=h}_getRequestOptionsWithSliceId(t){return C(this.rasterInfo.multidimensionalInfo)&&t.sliceId==null&&(t={...t,sliceId:this.getSliceIndex(t.multidimensionalDefinition)}),t}_processIdentifyResult(t,e){const{srcLocation:r,position:i,pyramidLevel:s,useTransposedTile:n}=e,a=t.pixels[0].length/t.width/t.height;if(!(!t.mask||t.mask[i]))return{location:r,value:null};const{multidimensionalInfo:l}=this.rasterInfo;if(B(l)||!n){const d=t.pixels.map(x=>x[i]),p={location:r,value:d,pyramidLevel:s},I=this._computeMagDirValues(d.map(x=>[x]));return I!=null&&I.length&&(p.magdirValue=I.map(x=>x[0])),p}let o=t.pixels.map(d=>d.slice(i*a,i*a+a)),c=this._computeMagDirValues(o);const{requestSomeSlices:u,identifyOptions:h}=e;let f=At(l,h.transposedVariableName);if(u){const d=Wt(f,X(h.multidimensionalDefinition),X(h.timeExtent));o=o.map(p=>d.map(I=>p[I])),c=c==null?void 0:c.map(p=>d.map(I=>p[I])),f=d.map(p=>f[p])}const m=t.noDataValues||this.rasterInfo.noDataValue,y={pixels:o,pixelType:t.pixelType};let g;return C(m)&&(Ti(y,m),g=y.mask),{location:r,value:null,dataSeries:f.map((d,p)=>{const I={value:(g==null?void 0:g[p])===0?null:o.map(x=>x[p]),multidimensionalDefinition:d.multidimensionalDefinition.map(x=>new ht({...x,isSlice:!0}))};return c!=null&&c.length&&(I.magdirValue=[c[0][p],c[1][p]]),I}),pyramidLevel:s}}};w([b()],U.prototype,"_rasterTileAlighmentInfo",void 0),w([b({readOnly:!0})],U.prototype,"_isGlobalWrappableSource",null),w([b(ot)],U.prototype,"url",null),w([b({type:String,json:{write:!0}})],U.prototype,"datasetName",void 0),w([b({type:String,json:{write:!0}})],U.prototype,"datasetFormat",void 0),w([b()],U.prototype,"hasUniqueSourceStorageInfo",void 0),w([b()],U.prototype,"rasterInfo",void 0),w([b()],U.prototype,"ioConfig",void 0),w([b()],U.prototype,"sourceJSON",void 0),U=w([Q("esri.layers.support.rasterDatasets.BaseRaster")],U);const oe=U;let se=class extends oe{constructor(){super(...arguments),this.datasetFormat="Function",this.tileType="Raster",this.rasterFunction=null}async open(t){var o,c,u;await this.init();const{rasterFunction:e}=this;(c=(o=this.primaryRasters)==null?void 0:o.rasters)!=null&&c.length?e.sourceRasters=this.primaryRasters.rasters:this.primaryRasters=e.getPrimaryRasters();const{rasters:r,rasterIds:i}=this.primaryRasters,s=r.map(h=>h.rasterInfo?void 0:h.open(t));await Promise.all(s);const n=r.map(({rasterInfo:h})=>h),a=e.bind({rasterInfos:n,rasterIds:i});if(!a.success||n.length===0)throw new $("raster-function:open",`cannot bind the function: ${(u=a.error)!=null?u:""}`);await this.syncJobHandler();const l=n[0];this.hasUniqueSourceStorageInfo=n.length===1||n.slice(1).every(h=>this._hasSameStorageInfo(h,l)),this.set("sourceJSON",r[0].sourceJSON),this.set("rasterInfo",e.rasterInfo)}async syncJobHandler(){var t;return(t=this.rasterJobHandler)==null?void 0:t.updateRasterFunction(this.rasterFunction)}async fetchPixels(t,e,r,i={}){var h,f;const{rasters:s,rasterIds:n}=this.primaryRasters,a=s.map(m=>m.fetchPixels(t,e,r,i)),l=await Promise.all(a),o=l.map(m=>m.pixelBlock);if(i.skipRasterFunction||o.every(m=>B(m)))return l[0];const c=(f=(h=l.find(m=>C(m.pixelBlock)))==null?void 0:h.extent)!=null?f:t,u=this.rasterJobHandler?await this.rasterJobHandler.process({extent:c,primaryPixelBlocks:o,primaryRasterIds:n}):this.rasterFunction.process({extent:c,primaryPixelBlocks:o,primaryRasterIds:n});return{...l[0],pixelBlock:u}}_hasSameStorageInfo(t,e){const{storageInfo:r,pixelSize:i,spatialReference:s,extent:n}=t,{storageInfo:a,pixelSize:l,spatialReference:o,extent:c}=e;return i.x===l.x&&i.y===l.y&&s.equals(o)&&n.equals(c)&&r.blockHeight===a.blockHeight&&r.blockWidth===a.blockWidth&&r.maximumPyramidLevel===a.maximumPyramidLevel}};w([b({type:String,json:{write:!0}})],se.prototype,"datasetFormat",void 0),w([b()],se.prototype,"tileType",void 0),w([b()],se.prototype,"rasterFunction",void 0),w([b()],se.prototype,"primaryRasters",void 0),se=w([Q("esri.layers.support.rasterDatasets.FunctionRaster")],se);const ze=se,et=Ee.getLogger("esri.layers.mixins.ImageryTileMixin"),zi=t=>{let e=class extends t{constructor(...i){var s,n;super(...i),this._isConstructedFromFunctionRaster=!1,this._rasterJobHandler={instance:null,refCount:0,connectionPromise:null},this.bandIds=null,this.copyright=null,this.interpolation="nearest",this.multidimensionalSubset=null,this.raster=null,this.rasterFunction=null,this.rasterInfo=null,this.sourceJSON=null,this.spatialReference=null,this.symbolizer=null,this._isConstructedFromFunctionRaster=((n=(s=i[0])==null?void 0:s.raster)==null?void 0:n.datasetFormat)==="Function"}get fullExtent(){var i;return(i=this.rasterInfo)==null?void 0:i.extent}set multidimensionalDefinition(i){this._set("multidimensionalDefinition",i),this.updateRenderer()}get tileInfo(){var i;return(i=this.rasterInfo)==null?void 0:i.storageInfo.tileInfo}set url(i){this._set("url",st(i,et))}set renderer(i){this._set("renderer",i),this.updateRenderer()}async convertVectorFieldData(i,s){if(B(i)||!this.rasterInfo)return null;const n=this._rasterJobHandler.instance,a=this.rasterInfo.dataType;return n?n.convertVectorFieldData({pixelBlock:i,dataType:a},s):ni(i,a)}async createFlowMesh(i,s){const n=this._rasterJobHandler.instance;return n?n.createFlowMesh(i,s):ai(i.meshType,i.simulationSettings,i.flowData,C(s.signal)?s.signal:new AbortController().signal)}normalizeRasterFetchOptions(i){var l,o,c;const{multidimensionalInfo:s}=(l=this.rasterInfo)!=null?l:{};if(B(s))return i;let n=i.multidimensionalDefinition||this.multidimensionalDefinition;!B(n)&&n.length||(n=Le(this.raster.rasterInfo,{multidimensionalSubset:this.multidimensionalSubset}));const a=i.timeExtent||this.timeExtent;if(C(n)&&C(a)&&(C(a.start)||C(a.end))){n=n.map(I=>I.clone());const u=(c=(o=s.variables.find(({name:I})=>I===n[0].variableName))==null?void 0:o.dimensions)==null?void 0:c.find(({name:I})=>I==="StdTime"),h=n.find(({dimensionName:I})=>I==="StdTime");if(!u||!h)return{...i,multidimensionalDefinition:null};const{start:f,end:m}=a,y=B(f)?null:f.getTime(),g=B(m)?null:m.getTime(),d=y!=null?y:g,p=g!=null?g:y;if(C(u.values)){const I=u.values.filter(x=>{if(Array.isArray(x)){if(d===p)return x[0]<=d&&x[1]>=d;const k=x[0]<=d&&x[1]>d||x[0]<p&&x[1]>=p,T=x[0]>=d&&x[1]<=p||x[0]<d&&x[1]>p;return k||T}return d===p?x===d:x>=d&&x<=p});if(I.length){const x=I.sort((k,T)=>{var _,S,F,R;return d===p?((_=k[0])!=null?_:k)-((S=T[0])!=null?S:T):Math.abs(((F=k[1])!=null?F:k)-p)-Math.abs(((R=T[1])!=null?R:T)-p)})[0];h.values=[x]}else n=null}else if(u.hasRegularIntervals&&u.extent){const[I,x]=u.extent;d>x||p<I?n=null:h.values=d===p?[d]:[Math.max(I,d),Math.min(x,p)]}}return C(n)&&jt(n,this.multidimensionalSubset)?{...i,multidimensionalDefinition:null}:{...i,multidimensionalDefinition:n}}async updateRasterFunction(){var u,h,f;if(this.type!=="imagery-tile"||!this.rasterFunction&&!this._cachedRasterFunctionJson||JSON.stringify(this.rasterFunction)===JSON.stringify(this._cachedRasterFunctionJson))return;if(this._isConstructedFromFunctionRaster&&this.raster.datasetFormat==="Function"){const m=this.raster.rasterFunction.toJSON();return!this.rasterFunction&&m&&this._set("rasterFunction",Be.fromJSON(m)),void(this._cachedRasterFunctionJson=(u=this.rasterFunction)==null?void 0:u.toJSON())}let i,s=this.raster,n=!1;s.datasetFormat==="Function"?(i=s.primaryRasters.rasters,s=i[0],n=!0):i=[s];const{rasterFunction:a}=this;if(a){const m={raster:s};i.length>1&&i.forEach(d=>m[d.url]=d);const y=De((h=a.rasterFunctionDefinition)!=null?h:a.toJSON(),m),g=new ze({rasterFunction:y});g.rasterJobHandler=this._rasterJobHandler.instance,await g.open(),this._cachedRasterFunctionJson=(f=this.rasterFunction)==null?void 0:f.toJSON(),this.raster=g}else this.raster=s,this._cachedRasterFunctionJson=null;if(this._cachedRendererJson=null,!n&&!a)return;const{bandIds:l}=this,{bandCount:o}=this.raster.rasterInfo,c=l!=null&&l.length?l.some(m=>m>=o):o>=3;l&&(c||this.renderer.type!=="raster-stretch")&&this._set("bandIds",null),this._configDefaultRenderer("auto")}async updateRenderer(){var c;const{loaded:i,symbolizer:s}=this;if(!i||!s)return;const{rasterInfo:n}=this.raster,a=(c=Ae(n,{multidimensionalDefinition:this.multidimensionalDefinition,multidimensionalSubset:this.multidimensionalSubset}))==null?void 0:c.name,l=We({...this.renderer.toJSON(),variableName:a});if(JSON.stringify(this._cachedRendererJson)===JSON.stringify(l))return;const o=this._rasterJobHandler.instance;o&&(s.rasterInfo=qe(n,a),s.rendererJSON=l,s.bind(),await o.updateSymbolizer(s),this._cachedRendererJson=l)}async applyRenderer(i,s){var c;const n=i&&i.pixelBlock;if(!(C(n)&&n.pixels&&n.pixels.length>0))return null;let a;await this.updateRenderer();const l=this._rasterJobHandler.instance,o=(c=this.bandIds)!=null?c:[];return a=l?await l.symbolize({...i,simpleStretchParams:s,bandIds:o}):this.symbolizer.symbolize({...i,simpleStretchParams:s,bandIds:o}),a}getTileUrl(i,s,n){return this.raster.datasetFormat==="RasterTileServer"?`${this.url}/tile/${i}/${s}/${n}`:""}getCompatibleTileInfo(i,s,n=!1){if(!this.loaded||B(s))return null;if(n&&i.equals(this.spatialReference))return this.tileInfo;const a=xt(i);return pe.create({size:256,spatialReference:i,origin:a?{x:a.origin[0],y:a.origin[1]}:{x:s.xmin,y:s.ymax}})}getCompatibleFullExtent(i){return this.loaded?(this._compatibleFullExtent&&this._compatibleFullExtent.spatialReference.equals(i)||(this._compatibleFullExtent=this.raster.computeExtent(i)),this._compatibleFullExtent):null}async fetchTile(i,s,n,a={}){if(r(this),a.requestAsImageElement){const o=this.getTileUrl(i,s,n);return nt(o,{responseType:"image",query:{...this.refreshParameters,...this.raster.ioConfig.customFetchParameters},signal:a.signal}).then(c=>c.data)}const{rasterInfo:l}=this;if(C(l.multidimensionalInfo)&&(a=this.normalizeRasterFetchOptions(a),B(a.multidimensionalDefinition))){const o=a.tileInfo||l.storageInfo.tileInfo;return{extent:this.raster.getTileExtentFromTileInfo(i,s,n,o),pixelBlock:null}}return await this._initJobHandler(),await this.updateRasterFunction(),this.renderer.type==="raster-shaded-relief"&&(a={...a,buffer:{cols:1,rows:1}}),this.raster.fetchTile(i,s,n,a)}async fetchPixels(i,s,n,a={}){return C(this.rasterInfo.multidimensionalInfo)&&(a=this.normalizeRasterFetchOptions(a),B(a.multidimensionalDefinition))?{extent:i,pixelBlock:null}:(await this._initJobHandler(),await this.updateRasterFunction(),this.raster.fetchPixels(i,s,n,a))}async identify(i,s={}){var o;const{raster:n,rasterInfo:a}=this;if(C(a.multidimensionalInfo)&&!(a.hasMultidimensionalTranspose&&!!(ut(s.multidimensionalDefinition)||s.transposedVariableName||s.timeExtent))&&(s=this.normalizeRasterFetchOptions(s),B(s.multidimensionalDefinition)))return{location:i,value:null};const l=(o=this.multidimensionalSubset)==null?void 0:o.areaOfInterest;if(l&&!l.contains(i))throw new $("imagery-tile-mixin:identify","the request cannot be fulfilled when falling outside of the multidimensional subset");return n.identify(i,s)}increaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount++}decreaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount--,this._rasterJobHandler.refCount<=0&&this._shutdownJobHandler()}hasStandardTime(){var a,l,o;const i=(a=this.rasterInfo)==null?void 0:a.multidimensionalInfo;if(B(i)||((l=this.rasterInfo)==null?void 0:l.dataType)!=="standard-time")return!1;const s=this.multidimensionalDefinition,n=(o=s==null?void 0:s[0])==null?void 0:o.variableName;return i.variables.some(c=>c.name===n&&(!(s!=null&&s[0].dimensionName)||c.dimensions.some(u=>u.name==="StdTime")))}getStandardTimeValue(i){return new Date(24*(i-25569)*3600*1e3).toString()}getMultidimensionalSubsetVariables(i){var n;const s=i!=null?i:(n=this.rasterInfo)==null?void 0:n.multidimensionalInfo;return Gt(this.multidimensionalSubset,s)}_configDefaultSettings(){this._configDefaultInterpolation(),this.multidimensionalDefinition||(this.multidimensionalDefinition=Le(this.raster.rasterInfo,{multidimensionalSubset:this.multidimensionalSubset})),this._configDefaultRenderer()}_initJobHandler(){if(this._rasterJobHandler.connectionPromise!=null)return this._rasterJobHandler.connectionPromise;const i=new Xt;return this._rasterJobHandler.connectionPromise=i.initialize().then(()=>{r(this),this._rasterJobHandler.instance=i,this.raster.rasterJobHandler=i,this.renderer&&this.updateRenderer(),this.raster.datasetFormat==="Function"&&this.raster.syncJobHandler()}).catch(()=>{}),this._rasterJobHandler.connectionPromise}_shutdownJobHandler(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy(),this._rasterJobHandler.instance=null,this._rasterJobHandler.connectionPromise=null,this._rasterJobHandler.refCount=0,this._cachedRendererJson=null,this.raster&&(this.raster.rasterJobHandler=null)}_configDefaultInterpolation(){var i;if(this.interpolation==null){r(this);const{raster:s}=this,n=Ut(s.rasterInfo,s.tileType,(i=this.sourceJSON)==null?void 0:i.defaultResamplingMethod);this._set("interpolation",n)}}_configDefaultRenderer(i="no"){var c,u,h,f,m,y,g;r(this);const{rasterInfo:s}=this.raster;!this.bandIds&&s.bandCount>1&&(this.bandIds=Vt(s));const n=(c=Ae(s,{multidimensionalDefinition:this.multidimensionalDefinition,multidimensionalSubset:this.multidimensionalSubset}))==null?void 0:c.name;if(!this.renderer||i==="override"){const d=je(s,{bandIds:this.bandIds,variableName:n});this.raster.datasetFormat==="WCSServer"&&d.type==="raster-stretch"&&(((h=(u=s.statistics)==null?void 0:u[0].max)!=null?h:0)>1e24||((m=(f=s.statistics)==null?void 0:f[0].min)!=null?m:0)<-1e24)&&(d.dynamicRangeAdjustment=!0,d.statistics=null,d.stretchType==="none"&&(d.stretchType="min-max")),this.renderer=d}const a=We({...this.renderer.toJSON(),variableName:n}),l=qe(s,n);this.symbolizer?(this.symbolizer.rendererJSON=a,this.symbolizer.rasterInfo=l):this.symbolizer=new oi({rendererJSON:a,rasterInfo:l});const o=this.symbolizer.bind();if(o.success){if(i==="auto"){const{colormap:d}=this.raster.rasterInfo,p=this.renderer;if(C(d))if(p.type!=="raster-colormap")this._configDefaultRenderer("override");else{const I=je(this.raster.rasterInfo);JSON.stringify(I)!==JSON.stringify(p)&&this._configDefaultRenderer("override")}else if(p.type==="raster-stretch"){const I=(y=this.bandIds)==null?void 0:y.length,x=(g=p.statistics)==null?void 0:g.length;!p.dynamicRangeAdjustment&&x&&I&&x!==I&&this._configDefaultRenderer("override")}}}else et.warn("imagery-tile-mixin",o.error||"The given renderer is not supported by the layer."),i==="auto"&&this._configDefaultRenderer("override")}};function r(i){if(!i.raster||!i.rasterInfo)throw new $("imagery-tile","no raster")}return w([b()],e.prototype,"_cachedRendererJson",void 0),w([b()],e.prototype,"_cachedRasterFunctionJson",void 0),w([b()],e.prototype,"_compatibleFullExtent",void 0),w([b()],e.prototype,"_isConstructedFromFunctionRaster",void 0),w([b()],e.prototype,"_rasterJobHandler",void 0),w([b()],e.prototype,"bandIds",void 0),w([b({json:{origins:{service:{read:{source:"copyrightText"}}}}})],e.prototype,"copyright",void 0),w([b({json:{read:!1}})],e.prototype,"fullExtent",null),w([b()],e.prototype,"interpolation",void 0),w([b()],e.prototype,"ioConfig",void 0),w([b({type:[ht],json:{write:!0}})],e.prototype,"multidimensionalDefinition",null),w([b({type:qt,json:{write:!0}})],e.prototype,"multidimensionalSubset",void 0),w([b()],e.prototype,"raster",void 0),w([b({type:Be})],e.prototype,"rasterFunction",void 0),w([b()],e.prototype,"rasterInfo",void 0),w([b()],e.prototype,"sourceJSON",void 0),w([b({readOnly:!0,type:j,json:{read:!1}})],e.prototype,"spatialReference",void 0),w([b({json:{read:!1}})],e.prototype,"tileInfo",null),w([b(ot)],e.prototype,"url",null),w([b({types:ft})],e.prototype,"renderer",null),w([b()],e.prototype,"symbolizer",void 0),e=w([Q("esri.layers.ImageryTileMixin")],e),e};function Ei(t){const e=t.fields,r=t.records,i=e.some(c=>c.name.toLowerCase()==="oid")?"OBJECTID":"OID",s=[{name:i,type:"esriFieldTypeOID",alias:"OID"}].concat(e.map(c=>({name:c.name,type:"esriFieldType"+c.typeName,alias:c.name}))),n=s.map(c=>c.name),a=[];let l=0,o=0;return r.forEach(c=>{const u={};for(u[i]=l++,o=1;o<n.length;o++)u[n[o]]=c[o-1];a.push({attributes:u})}),{displayFieldName:"",fields:s,features:a}}class dt{static get supportedVersions(){return[5]}static parse(e){const r=new DataView(e),i=3&r.getUint8(0);if(i!==3)return{header:{version:i},recordSet:null};const s=r.getUint32(4,!0),n=r.getUint16(8,!0),a=r.getUint16(10,!0),l={version:i,recordCount:s,headerByteCount:n,recordByteCount:a};let o=32;const c=[],u=[];let h;if(i===3){for(;r.getUint8(o)!==13;)h=String.fromCharCode(r.getUint8(o+11)).trim(),c.push({name:Ge(new Uint8Array(e,o,11)),type:h,typeName:["String","Date","Double","Boolean","String","Integer"][["C","D","F","L","M","N"].indexOf(h)],length:r.getUint8(o+16)}),o+=32;if(o+=1,c.length>0)for(;u.length<s&&e.byteLength-o>a;){const f=[];r.getUint8(o)===32?(o+=1,c.forEach(m=>{if(m.type==="C")f.push(Ge(new Uint8Array(e,o,m.length)).trim());else if(m.type==="N")f.push(parseInt(String.fromCharCode.apply(null,new Uint8Array(e,o,m.length)).trim(),10));else if(m.type==="F")f.push(parseFloat(String.fromCharCode.apply(null,new Uint8Array(e,o,m.length)).trim()));else if(m.type==="D"){const y=String.fromCharCode.apply(null,new Uint8Array(e,o,m.length)).trim();f.push(new Date(parseInt(y.substring(0,4),10),parseInt(y.substring(4,6),10)-1,parseInt(y.substring(6,8),10)))}o+=m.length}),u.push(f)):o+=a}}return{header:l,fields:c,records:u,recordSet:Ei({fields:c,records:u})}}}const re=new Map;re.set("int16","esriFieldTypeSmallInteger"),re.set("int32","esriFieldTypeInteger"),re.set("int64","esriFieldTypeInteger"),re.set("float32","esriFieldTypeSingle"),re.set("float64","esriFieldTypeDouble"),re.set("text","esriFieldTypeString");const tt=8;let he=class extends oe{constructor(){super(...arguments),this.storageInfo=null,this.datasetFormat="CRF"}async open(t){await this.init();const{data:e}=await this.request(this.url+"/conf.json",{signal:t==null?void 0:t.signal});if(!this._validateHeader(e))throw new $("cloudraster:open","Invalid or unsupported conf.json.");this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const{storageInfo:r,rasterInfo:i}=this._parseHeader(e);if(i.dataType==="thematic"){const s=await this._fetchAuxiliaryInformation();i.attributeTable=s}this._set("storageInfo",r),this._set("rasterInfo",i),this.ioConfig.retryCount=this.ioConfig.retryCount||0}async fetchRawTile(t,e,r,i={}){const{transposeInfo:s}=this.rasterInfo.storageInfo,{transposedVariableName:n}=i,a=!(!s||!n),l=a?0:this.rasterInfo.storageInfo.maximumPyramidLevel-t;if(l<0)return null;const o=this._buildCacheFilePath(l,e,r,i.multidimensionalDefinition,n),c=this._getIndexRecordFromBundle(e,r,a),u=await this.request(o,{range:{from:0,to:this.storageInfo.headerSize-1},responseType:"array-buffer",signal:i.signal});if(!u)return null;const h=new Uint8Array(u.data),f=this._getTileEndAndContentType(h,c);if(f.recordSize===0)return null;const m=await this.request(o,{range:{from:f.position,to:f.position+f.recordSize},responseType:"array-buffer",signal:i.signal});if(!m)return null;const[y,g]=this._getTileSize(a);return this.decodePixelBlock(m.data,{width:y,height:g,planes:null,pixelType:null,returnInterleaved:a})}_validateHeader(t){const e=["origin","extent","geodataXform","LODInfos","blockWidth","blockHeight","bandCount","pixelType","pixelSizeX","pixelSizeY","format","packetSize"];return t&&t.type==="RasterInfo"&&!e.some(r=>!t[r])}_parseHeader(t){var J,A;const e=["u1","u2","u4","u8","s8","u16","s16","u32","s32","f32","f64"][t.pixelType],{bandCount:r,histograms:i,colormap:s,blockWidth:n,blockHeight:a,firstPyramidLevel:l,maximumPyramidLevel:o}=t,c=t.statistics&&t.statistics.map(z=>({min:z.min,max:z.max,avg:z.mean,stddev:z.standardDeviation,median:z.median,mode:z.mode})),u=t.extent.spatialReference,h=(J=t.geodataXform)==null?void 0:J.spatialReference,f=new j((u==null?void 0:u.wkid)||(u==null?void 0:u.wkt)?u:h);let m=new G({xmin:t.extent.xmin,ymin:t.extent.ymin,xmax:t.extent.xmax,ymax:t.extent.ymax,spatialReference:f});const y=new q({x:t.pixelSizeX,y:t.pixelSizeY,spatialReference:f}),g=Math.round((m.xmax-m.xmin)/y.x),d=Math.round((m.ymax-m.ymin)/y.y),p=this._parseTransform(t.geodataXform),I=p?m:null;p&&(m=p.forwardTransform(m),y.x=(m.xmax-m.xmin)/g,y.y=(m.ymax-m.ymin)/d);const x=(A=t.properties)!=null?A:{},k=t.format.toLowerCase().replace("cache/",""),T=new q(t.origin.x,t.origin.y,f);let _,S,F,R;if(s&&s.colors)for(_=[],S=0;S<s.colors.length;S++)F=s.colors[S],R=s.values?s.values[S]:S,_.push([R,255&F,F<<16>>>24,F<<8>>>24,F>>>24]);const v=t.LODInfos,P=[];for(S=0;S<v.levels.length;S++)P.push(new at({level:v.levels[S],resolution:v.resolutions[S],scale:96/.0254*v.resolutions[S]}));const M=new pe({dpi:96,lods:P,format:k,origin:T,size:[n,a],spatialReference:f}),D={recordSize:tt,packetSize:t.packetSize,headerSize:t.packetSize*t.packetSize*tt+64},N=[{maxCol:Math.ceil(g/n)-1,maxRow:Math.ceil(d/a)-1,minCol:0,minRow:0}];let O=2;if(o>0)for(S=0;S<o;S++)N.push({maxCol:Math.ceil(g/O/n)-1,maxRow:Math.ceil(d/O/a)-1,minCol:0,minRow:0}),O*=2;const H=t.mdInfo;let L=null;if(H&&x._yxs){const z=x._yxs;L={packetSize:z.PacketSize,tileSize:[z.TileXSize,z.TileYSize]}}return{storageInfo:D,rasterInfo:new ge({width:g,height:d,pixelType:e,bandCount:r,extent:m,nativeExtent:I,transform:p,spatialReference:f,pixelSize:y,keyProperties:x,statistics:c,histograms:i,multidimensionalInfo:H,colormap:_,storageInfo:new ye({blockWidth:n,blockHeight:a,pyramidBlockWidth:n,pyramidBlockHeight:a,origin:T,tileInfo:M,transposeInfo:L,firstPyramidLevel:l,maximumPyramidLevel:o,blockBoundary:N})})}}_parseTransform(t){var r,i;if(!_i(t))throw new $("cloudraster:open","the data contains unsupported geodata transform types");const e=ki(t);if(e.type==="identity")return null;if(e.type!=="polynomial"||!((r=e.forwardCoefficients)!=null&&r.length)||!((i=e.inverseCoefficients)!=null&&i.length))throw new $("cloudraster:open","the data contains unsupported geodata transforms - both forward and inverse coefficients are required currently");return e}async _fetchAuxiliaryInformation(t){const e=this.request(this.url+"/conf.vat.json",{signal:t}).then(n=>n.data).catch(()=>null),r=this.request(this.url+"/conf.vat.dbf",{responseType:"array-buffer",signal:t}).then(n=>n.data).catch(()=>null),i=await Promise.all([e,r]);let s;if(i[0]){let n=i[0].fields;const a=i[0].values;if(n&&a){n=n.map(o=>({type:o.name==="OID"?"esriFieldTypeOID":re.get(o.type),name:o.name,alias:o.alias||o.name}));const l=a.map(o=>({attributes:o}));n&&a&&(s={fields:n,features:l})}}return!s&&i[1]&&(s=dt.parse(i[1]).recordSet),lt.fromJSON(s)}_buildCacheFilePath(t,e,r,i,s){const n=this._getPackageSize(!!s),a=Math.floor(e/n)*n,l=Math.floor(r/n)*n,o="R"+this._toHexString4(a)+"C"+this._toHexString4(l);let c="L";c+=t>=10?t.toString():"0"+t.toString();const{multidimensionalInfo:u}=this.rasterInfo,h=i==null?void 0:i[0];if(B(u)||!h)return`${this.url}/_alllayers/${c}/${o}.bundle`;let f="_yxs";if(!s){f=u.variables.find(g=>g.name===h.variableName).dimensions[0].values.indexOf(h.values[0]).toString(16);const y=4-f.length;for(let g=0;g<y;g++)f="0"+f;f="S"+f}const m=this._getVariableFolderName(s||h.variableName);return`${this.url}/_alllayers/${m}/${f}/${c}/${o}.bundle`}_getPackageSize(t=!1){var r;const{transposeInfo:e}=this.rasterInfo.storageInfo;return t&&C(e)?(r=e.packetSize)!=null?r:0:this.storageInfo.packetSize}_getTileSize(t=!1){const{storageInfo:e}=this.rasterInfo,{transposeInfo:r}=e;return t&&C(r)?r.tileSize:e.tileInfo.size}_getVariableFolderName(t){return(t=t.trim())===""?"_v":t.replace(/[\{|\}\-]/g,"_").replace("\\*","_v")}_getIndexRecordFromBundle(t,e,r=!1){const i=this._getPackageSize(r),s=i*(t%i)+e%i;if(s<0)throw new Error("Invalid level / row / col");return 20+s*this.storageInfo.recordSize+44}_getTileEndAndContentType(t,e){const r=t.subarray(e,e+8);let i,s=0;for(i=0;i<5;i++)s|=(255&r[i])<<8*i;const n=0xffffffffff&s;for(s=0,i=5;i<8;i++)s|=(255&r[i])<<8*(i-5);return{position:n,recordSize:0xffffffffff&s}}_toHexString4(t){let e=t.toString(16);if(e.length!==4){let r=4-e.length;for(;r-- >0;)e="0"+e}return e}};w([b({readOnly:!0})],he.prototype,"storageInfo",void 0),w([b({type:String,json:{write:!0}})],he.prototype,"datasetFormat",void 0),he=w([Q("esri.layers.support.rasterDatasets.CloudRaster")],he);const Ji=he;let fe=class extends oe{constructor(){super(...arguments),this.datasetFormat="MEMORY",this.data=null}async open(t){var d,p;await this.init();const e=this.data,{pixelBlock:r,statistics:i,histograms:s,name:n,keyProperties:a,nativeExtent:l,transform:o}=this.data,{width:c,height:u,pixelType:h}=r,f=(d=e.extent)!=null?d:new G({xmin:-.5,ymin:.5,xmax:c-.5,ymax:u-.5,spatialReference:new j({wkid:3857})}),m=(p=e.isPseudoSpatialReference)!=null?p:!e.extent,y={x:f.width/c,y:f.height/u},g=new ge({width:c,height:u,pixelType:h,extent:f,nativeExtent:l,transform:o,pixelSize:y,spatialReference:f.spatialReference,bandCount:r.pixels.length,keyProperties:a||{},statistics:i,isPseudoSpatialReference:m,histograms:s});this.createRemoteDatasetStorageInfo(g,512,512),this._set("rasterInfo",g),this.updateTileInfo(),await this._buildInMemoryRaster(r,{width:512,height:512},t),this.datasetName=n,this.url="/InMemory/"+n}fetchRawTile(t,e,r,i={}){const s=this._pixelBlockTiles.get(`${t}/${e}/${r}`);return Promise.resolve(s)}async _buildInMemoryRaster(t,e,r){var c,u;const i=this.rasterInfo.storageInfo.maximumPyramidLevel,s=this.rasterJobHandler?this.rasterJobHandler.split({pixelBlock:t,tileSize:e,maximumPyramidLevel:i},r):Promise.resolve(li(t,e,i)),n=C(this.rasterInfo.statistics),a=C(this.rasterInfo.histograms),l=n?Promise.resolve({statistics:null,histograms:null}):this.rasterJobHandler?this.rasterJobHandler.estimateStatisticsHistograms({pixelBlock:t},r):Promise.resolve(ci(t)),o=await ct([s,l]);if(!o[0].value&&o[1].value)throw new $("inmemory-raster:open","failed to build in memory raster");this._pixelBlockTiles=o[0].value,n||(this.rasterInfo.statistics=(c=o[1].value)==null?void 0:c.statistics),a||(this.rasterInfo.histograms=(u=o[1].value)==null?void 0:u.histograms)}};w([b({type:String,json:{write:!0}})],fe.prototype,"datasetFormat",void 0),w([b()],fe.prototype,"data",void 0),fe=w([Q("esri.layers.support.rasterDatasets.InMemoryRaster")],fe);const Ni=fe;function ce(t,e){if(!t||!e)return[];let r=e;e.includes("/")?(r=e.slice(0,e.indexOf("/")),e=e.slice(e.indexOf("/")+1)):e="";const i=[];if(e){const n=ce(t,r);for(let a=0;a<n.length;a++)ce(n[a],e).forEach(l=>i.push(l));return i}const s=t.getElementsByTagNameNS("*",r);if(!s||s.length===0)return[];for(let n=0;n<s.length;n++)i.push(s[n]||s.item[n]);return i}function V(t,e){if(!t||!e)return null;let r=e;e.includes("/")?(r=e.slice(0,e.indexOf("/")),e=e.slice(e.indexOf("/")+1)):e="";const i=ce(t,r);return i.length>0?e?V(i[0],e):i[0]:null}function K(t,e=null){const r=e?V(t,e):t;let i;return r?(i=r.textContent||r.nodeValue,i?i.trim():null):null}function Hi(t,e){const r=ce(t,e),i=[];let s;for(let n=0;n<r.length;n++)s=r[n].textContent||r[n].nodeValue,s&&(s=s.trim(),s!==""&&i.push(s));return i}function Se(t,e){return Hi(t,e).map(r=>Number(r))}function ae(t,e){const r=K(t,e);return Number(r)}function Me(t,e){var s;const r=(s=t==null?void 0:t.nodeName)==null?void 0:s.toLowerCase(),i=e.toLowerCase();return r.slice(r.lastIndexOf(":")+1)===i}function it(t,e){if(!t||!e)return null;const r=[];for(let i=0;i<t.length;i++)r.push(t[i]),r.push(e[i]);return r}function Li(t){var u;const e=V(t,"GeodataXform"),r=_e(ae(e,"SpatialReference/WKID")||K(e,"SpatialReference/WKT"));if(e.getAttribute("xsi:type")!=="typens:PolynomialXform")return{spatialReference:r,transform:null};const i=(u=ae(e,"PolynomialOrder"))!=null?u:1,s=Se(e,"CoeffX/Double"),n=Se(e,"CoeffY/Double"),a=Se(e,"InverseCoeffX/Double"),l=Se(e,"InverseCoeffY/Double"),o=it(s,n),c=it(a,l);return{spatialReference:r,transform:o&&c&&o.length&&c.length?new Ne({spatialReference:r,polynomialOrder:i,forwardCoefficients:o,inverseCoefficients:c}):null}}function Ai(t){var f;const e=ae(t,"NoDataValue"),r=V(t,"Histograms/HistItem"),i=ae(r,"HistMin"),s=ae(r,"HistMax"),n=ae(r,"BucketCount"),a=(f=K(r,"HistCounts"))==null?void 0:f.split("|").map(m=>Number(m));let l,o,c,u;ce(t,"Metadata/MDI").forEach(m=>{var g;const y=Number((g=m.textContent)!=null?g:m.nodeValue);switch(m.getAttribute("key").toUpperCase()){case"STATISTICS_MINIMUM":l=y;break;case"STATISTICS_MAXIMUM":o=y;break;case"STATISTICS_MEAN":c=y;break;case"STATISTICS_STDDEV":u=y}});const h=ae(t,"Metadata/SourceBandIndex");return{noDataValue:e,histogram:(a==null?void 0:a.length)&&i!=null&&s!=null?{min:i,max:s,size:n||a.length,counts:a}:null,sourceBandIndex:h,statistics:l!=null&&o!=null?{min:l,max:o,avg:c,stddev:u}:null}}function _e(t){if(!t)return null;let e=Number(t);if(!isNaN(e)&&e!==0)return new j({wkid:e});if((t=String(t)).startsWith("COMPD_CS")){if(!t.includes("VERTCS")||!t.includes("GEOGCS")&&!t.startsWith("PROJCS"))return null;const r=t.indexOf("VERTCS"),i=t.indexOf("PROJCS"),s=i>-1?i:t.indexOf("GEOGCS");if(s===-1)return null;const n=t.slice(s,t.lastIndexOf("]",r)+1).trim(),a=t.slice(r,t.lastIndexOf("]")).trim();e=$e(n);const l=new j(e?{wkid:e}:{wkt:n}),o=$e(a);return o&&(l.vcsWkid=o),l}return t.startsWith("GEOGCS")||t.startsWith("PROJCS")?(e=$e(t),new j(e!==0?{wkid:e}:{wkt:t})):null}function $e(t){var s;const e=t.replace(/\]/g,"[").replace(/\"/g,"").split("[").map(n=>n.trim()).filter(n=>n!==""),r=e[e.length-1].split(","),i=(s=r[0])==null?void 0:s.toLowerCase();if((i==="epsg"||i==="esri")&&t.endsWith('"]]')){const n=Number(r[1]);if(!isNaN(n)&&n!==0)return n}return 0}function He(t){var i;if(((i=t==null?void 0:t.documentElement.tagName)==null?void 0:i.toLowerCase())!=="pamdataset")return{};const e={spatialReference:null,transform:null,metadata:{},rasterBands:[],statistics:null,histograms:null};t.documentElement.childNodes.forEach(s=>{if(s.nodeType===1){if(Me(s,"SRS")){if(!e.spatialReference){const n=K(s);e.spatialReference=_e(n)}}else if(Me(s,"Metadata"))if(s.getAttribute("domain")==="xml:ESRI"){const{spatialReference:n,transform:a}=Li(s);e.transform=a,e.spatialReference||(e.spatialReference=n)}else ce(s,"MDI").forEach(n=>e.metadata[n.getAttribute("key")]=K(n));else if(Me(s,"PAMRasterBand")){const n=Ai(s);n.sourceBandIndex!=null&&e.rasterBands[n.sourceBandIndex]==null?e.rasterBands[n.sourceBandIndex]=n:e.rasterBands.push(n)}}});const r=e.rasterBands;if(r.length){const s=!!r[0].statistics;e.statistics=s?r.map(a=>a.statistics).filter(C):null;const n=!!r[0].histogram;e.histograms=n?r.map(a=>a.histogram).filter(C):null}return e}let ve=class extends oe{async open(t){await this.init();const e=await this._fetchData(t);let{spatialReference:r,statistics:i,histograms:s,transform:n}=await this._fetchAuxiliaryData(t);const a=!r;a&&(r=new j({wkid:3857})),(s==null?void 0:s.length)&&i==null&&(i=Je(s));const{width:l,height:o}=e;let c=new G({xmin:-.5,ymin:.5-o,xmax:l-.5,ymax:.5,spatialReference:r});const u=n?n.forwardTransform(c):c;let h=!0;if(n){const m=n.forwardCoefficients;h=m&&m[1]===0&&m[2]===0,h&&(n=null,c=u)}const f=new Ni({data:{extent:u,nativeExtent:c,transform:n,pixelBlock:e,statistics:i,histograms:s,keyProperties:{DateType:"Processed"},isPseudoSpatialReference:a}});await f.open(),f.data=null,this._set("rasterInfo",f.rasterInfo),this._inMemoryRaster=f}fetchRawTile(t,e,r,i={}){return this._inMemoryRaster.fetchRawTile(t,e,r,i)}async _fetchData(t){const{data:e}=await this.request(this.url,{responseType:"array-buffer",signal:t==null?void 0:t.signal}),r=ui(e).toUpperCase();if(r!=="JPG"&&r!=="PNG"&&r!=="GIF"&&r!=="BMP")throw new $("image-aux-raster:open","the data is not a supported format");this._set("datasetFormat",r);const i=r.toLowerCase(),s=i==="gif"||i==="bmp"||!It("ios"),n=await this.decodePixelBlock(e,{format:i,useCanvas:s,hasNoZlibMask:!0});if(n==null)throw new $("image-aux-raster:open","the data cannot be decoded");return n}async _fetchAuxiliaryData(t){var c,u;const e=X(t==null?void 0:t.signal),r=(c=this.ioConfig.skipExtensions)!=null?c:[],i=r.includes("aux.xml")?null:this.request(this.url+".aux.xml",{responseType:"xml",signal:e}),s=this.datasetFormat,n=s==="JPG"?"jgw":s==="PNG"?"pgw":s==="BMP"?"bpw":null,a=n&&r.includes(n)?null:this.request(this.url.slice(0,this.url.lastIndexOf("."))+"."+n,{responseType:"text",signal:e}),l=await ct([i,a]);if(e!=null&&e.aborted)throw wt();const o=He((u=l[0].value)==null?void 0:u.data);if(!o.transform){const h=l[1].value?l[1].value.data.split(`
`).slice(0,6).map(f=>Number(f)):null;o.transform=(h==null?void 0:h.length)===6?new Ne({forwardCoefficients:[h[4],h[5],h[0],-h[1],h[2],-h[3]]}):null}return o}};w([b({type:String,json:{write:!0}})],ve.prototype,"datasetFormat",void 0),ve=w([Q("esri.layers.support.rasterDatasets.ImageAuxRaster")],ve);const Re=ve;let de=class extends oe{constructor(){super(...arguments),this._levelOffset=0,this._tilemapCache=null,this._slices=null,this.datasetFormat="RasterTileServer",this.tileType=null}async open(t){var S,F,R,v,P;await this.init();const e=t&&t.signal,r=this.sourceJSON?{data:this.sourceJSON}:await this.request(this.url,{query:{f:"json"},signal:e});r.ssl&&(this.url=this.url.replace(/^http:/i,"https:"));const i=r.data;if(this.sourceJSON=i,!i)throw new $("imageserverraster:open","cannot initialize tiled image service, missing service info");if(!i.tileInfo)throw new $("imageserverraster:open","use ImageryLayer to open non-tiled image services");this._fixScaleInServiceInfo();const s=["jpg","jpeg","png","png8","png24","png32","mixed"];this.tileType=i.cacheType,this.tileType==null&&(s.includes(i.tileInfo.format.toLowerCase())?this.tileType="Map":i.tileInfo.format.toLowerCase()==="lerc"?this.tileType="Elevation":this.tileType="Raster"),this.datasetName=(F=(S=i.name)==null?void 0:S.slice(i.name.indexOf("/")+1))!=null?F:"";const n=await this._fetchRasterInfo({signal:e});if(B(n))throw new $("image-server-raster:open","cannot initialize image service");const a=this.tileType==="Map"?Pi(i.tileInfo,i):pe.fromJSON(i.tileInfo);bt(a);const[l,o]=this._computeMinMaxLOD(n,a),{extent:c,pixelSize:u}=n,h=.5/n.width*u.x,f=Math.max(u.x,u.y),{lods:m}=a;(this.tileType!=="Map"&&i.maxScale!==0||Math.abs(u.x-u.y)>h||!m.some(M=>Math.abs(M.resolution-f)<h))&&(u.x=u.y=l.resolution,n.width=Math.ceil((c.xmax-c.xmin)/u.x-.1),n.height=Math.ceil((c.ymax-c.ymin)/u.y-.1));const y=l.level-o.level,[g,d]=a.size,p=[],I=[];m.forEach((M,D)=>{M.level>=o.level&&M.level<=l.level&&p.push({x:M.resolution,y:M.resolution}),D<m.length-1&&I.push(Math.round(10*M.resolution/m[D+1].resolution)/10)}),p.sort((M,D)=>M.x-D.x);const x=this.computeBlockBoundary(c,g,d,a.origin,p,y),k=p.length>1?p.slice(1):null;let T;i.transposeInfo&&(T={tileSize:[i.transposeInfo.rows,i.transposeInfo.cols],packetSize:(v=(R=n.keyProperties)==null?void 0:R._yxs.PacketSize)!=null?v:0});const _=I.length<=1||I.length>=3&&I.slice(0,I.length-1).every(M=>M===I[0])?(P=I[0])!=null?P:2:Math.round(10/(o.resolution/l.resolution)**(-1/y))/10;if(n.storageInfo=new ye({blockWidth:a.size[0],blockHeight:a.size[1],pyramidBlockWidth:a.size[0],pyramidBlockHeight:a.size[1],pyramidResolutions:k,pyramidScalingFactor:_,compression:a.format,origin:a.origin,firstPyramidLevel:1,maximumPyramidLevel:y,tileInfo:a,transposeInfo:T,blockBoundary:x}),this._fixGCSShift(n),this._set("rasterInfo",n),i.capabilities.toLowerCase().includes("tilemap")){const M={tileInfo:n.storageInfo.tileInfo,parsedUrl:St(this.url),url:this.url,tileServers:[],type:"tile"};this._tilemapCache=new Mi({layer:M})}}async fetchRawTile(t,e,r,i={}){const{storageInfo:s,extent:n}=this.rasterInfo,{transposeInfo:a}=s,l=C(a)&&!!i.transposedVariableName;if(this._slices&&!l&&i.sliceId==null)return null;const o=l?0:s.maximumPyramidLevel-t+this._levelOffset,c=`${this.url}/tile/${o}/${e}/${r}`,u=this._slices?l?{variable:i.transposedVariableName}:{sliceId:i.sliceId||0}:null,{data:h}=await this.request(c,{query:u,responseType:"array-buffer",signal:i.signal});if(!h)return null;const f=l?a.tileSize:s.tileInfo.size,m=await this.decodePixelBlock(h,{width:f[0],height:f[1],planes:null,pixelType:null,isPoint:this.tileType==="Elevation",returnInterleaved:l,noDataValue:X(this.rasterInfo.noDataValue)});if(m==null)return null;const y=s.blockBoundary[t];if(s.compression!=="jpg"||r>y.minCol&&r<y.maxCol&&e>y.minRow&&e<y.maxRow)return m;const{origin:g,blockWidth:d,blockHeight:p}=s,{x:I,y:x}=this.getPyramidPixelSize(t),k=Math.round((n.xmin-g.x)/I)%d,T=Math.round((n.xmax-g.x)/I)%d||d,_=Math.round((g.y-n.ymax)/x)%p,S=Math.round((g.y-n.ymin)/x)%p||p,F=r===y.minCol?k:0,R=e===y.minRow?_:0,v=r===y.maxCol?T:d,P=e===y.maxRow?S:p;return hi(m,{x:F,y:R},{width:v-F,height:P-R}),m}getSliceIndex(t){if(!this._slices||B(t)||t.length===0)return null;const e=t;for(let r=0;r<this._slices.length;r++){const i=this._slices[r].multidimensionalDefinition;if(i.length===e.length&&!i.some(s=>{const n=e.find(a=>s.variableName===a.variableName&&a.dimensionName===s.dimensionName);return n?(Array.isArray(s.values[0])?`${s.values[0][0]}-${s.values[0][1]}`:s.values[0])!==(Array.isArray(n.values[0])?`${n.values[0][0]}-${n.values[0][1]}`:n.values[0]):!0}))return r}return null}async fetchVariableStatisticsHistograms(t,e){const r=this.request(this.url+"/statistics",{query:{variable:t,f:"json"},signal:e}).then(n=>{var a;return(a=n.data)==null?void 0:a.statistics}),i=this.request(this.url+"/histograms",{query:{variable:t,f:"json"},signal:e}).then(n=>{var a;return(a=n.data)==null?void 0:a.histograms}),s=await Promise.all([r,i]);return s[0]&&s[0].forEach(n=>{n.avg=n.mean,n.stddev=n.standardDeviation}),{statistics:s[0]||null,histograms:s[1]||null}}async computeBestPyramidLevelForLocation(t,e={}){if(!this._tilemapCache)return 0;let r=this.identifyPixelLocation(t,0,X(e.datumTransformation));if(r===null)return null;let i=0;const{maximumPyramidLevel:s}=this.rasterInfo.storageInfo;let n=s-i+this._levelOffset;const a=r.srcLocation;for(;n>=0;){try{if(await this._tilemapCache.fetchAvailability(n,r.row,r.col,e)==="available")break}catch{}if(n--,i++,r=this.identifyPixelLocation(a,i,X(e.datumTransformation)),r===null)return null}return n===-1||r==null?null:i}async _fetchRasterInfo(t){const e=this.sourceJSON;if(this.tileType==="Map"){const a=e.fullExtent||e.extent,l=Math.ceil((a.xmax-a.xmin)/e.pixelSizeX-.1),o=Math.ceil((a.ymax-a.ymin)/e.pixelSizeY-.1),c=j.fromJSON(e.spatialReference||a.spatialReference),u=new q({x:e.pixelSizeX,y:e.pixelSizeY,spatialReference:c});return new ge({width:l,height:o,bandCount:3,extent:G.fromJSON(a),spatialReference:c,pixelSize:u,pixelType:"u8",statistics:null,keyProperties:{DataType:"processed"}})}const{signal:r}=t,i=Yt(this.url,this.sourceJSON,{signal:r,query:this.ioConfig.customFetchParameters}),s=e.hasMultidimensions?this.request(`${this.url}/slices`,{query:{f:"json"},signal:r}).then(a=>a.data&&a.data.slices).catch(()=>null):null,n=await Promise.all([i,s]);return this._slices=n[1],n[0]}_fixScaleInServiceInfo(){const{sourceJSON:t}=this;t.minScale&&t.minScale<0&&(t.minScale=0),t.maxScale&&t.maxScale<0&&(t.maxScale=0)}_fixGCSShift(t){const{extent:e,spatialReference:r}=t;e.xmin>-1&&e.xmax>181&&(r==null?void 0:r.wkid)&&r.isGeographic&&(t.nativeExtent=t.extent,t.transform=new Ci,t.extent=t.transform.forwardTransform(e))}_computeMinMaxLOD(t,e){var f,m,y;const{pixelSize:r}=t,i=.5/t.width*r.x,{lods:s}=e,n=e.lodAt(Math.max.apply(null,s.map(g=>g.level))),a=e.lodAt(Math.min.apply(null,s.map(g=>g.level))),{tileType:l}=this;if(l==="Map")return this._levelOffset=s[0].level,[n,a];if(l==="Raster")return[(f=s.find(g=>g.resolution===r.x))!=null?f:n,a];const{minScale:o,maxScale:c}=this.sourceJSON;let u=n;c>0&&(u=s.find(g=>Math.abs(g.scale-c)<i),u||(u=(m=s.filter(g=>g.scale>c).sort((g,d)=>g.scale>d.scale?1:-1)[0])!=null?m:n));let h=a;return o>0&&(h=(y=s.find(g=>Math.abs(g.scale-o)<i))!=null?y:a,this._levelOffset=h.level-a.level),[u,h]}};w([b({type:String,json:{write:!0}})],de.prototype,"datasetFormat",void 0),w([b()],de.prototype,"tileType",void 0),de=w([Q("esri.layers.support.rasterDatasets.ImageServerRaster")],de);const Wi=de,Y=new Map;Y.set("Int8","s8"),Y.set("UInt8","u8"),Y.set("Int16","s16"),Y.set("UInt16","u16"),Y.set("Int32","s32"),Y.set("UInt32","u32"),Y.set("Float32","f32"),Y.set("Float64","f32"),Y.set("Double64","f32");const ee=new Map;ee.set("none",{blobExtension:".til",isOneSegment:!0,decoderFormat:"bip"}),ee.set("lerc",{blobExtension:".lrc",isOneSegment:!1,decoderFormat:"lerc"}),ee.set("deflate",{blobExtension:".pzp",isOneSegment:!0,decoderFormat:"deflate"}),ee.set("jpeg",{blobExtension:".pjg",isOneSegment:!0,decoderFormat:"jpg"});let le=class extends oe{constructor(){super(...arguments),this._files=null,this._storageIndex=null,this.datasetFormat="MRF"}async open(t){var g,d;await this.init(),this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const e=t?X(t.signal):null,r=await this.request(this.url,{responseType:"xml",signal:e}),{rasterInfo:i,files:s}=this._parseHeader(r.data);if(((g=this.ioConfig.skipExtensions)==null?void 0:g.indexOf("aux.xml"))===-1){const p=await this._fetchAuxiliaryData(t);p!=null&&(i.statistics=(d=p.statistics)!=null?d:i.statistics,i.histograms=p.histograms,p.histograms&&B(i.statistics)&&(i.statistics=Je(p.histograms)))}this._set("rasterInfo",i),this._files=s;const n=await this.request(s.index,{responseType:"array-buffer",signal:e});this._storageIndex=this._parseIndex(n.data);const{blockWidth:a,blockHeight:l}=this.rasterInfo.storageInfo,o=this.rasterInfo.storageInfo.pyramidScalingFactor,{width:c,height:u}=this.rasterInfo,h=[],f=this._getBandSegmentCount();let m=0,y=-1;for(;m<this._storageIndex.length;){y++;const p=Math.ceil(c/a/o**y)-1,I=Math.ceil(u/l/o**y)-1;m+=(p+1)*(I+1)*f*4,h.push({maxRow:I,maxCol:p,minCol:0,minRow:0})}this.rasterInfo.storageInfo.blockBoundary=h,y>0&&(this.rasterInfo.storageInfo.firstPyramidLevel=1,this.rasterInfo.storageInfo.maximumPyramidLevel=y),this.updateTileInfo()}async fetchRawTile(t,e,r,i={}){const{blockWidth:s,blockHeight:n,blockBoundary:a}=this.rasterInfo.storageInfo,l=a[t];if(!l||l.maxRow<e||l.maxCol<r||l.minRow>e||l.minCol>r)return null;const{bandCount:o,pixelType:c}=this.rasterInfo,{ranges:u,actualTileWidth:h,actualTileHeight:f}=this._getTileLocation(t,e,r);if(!u||u.length===0)return null;if(u[0].from===0&&u[0].to===0){const R=new Uint8Array(s*n);return new fi({width:s,height:n,pixels:null,mask:R,validPixelCount:0})}const{bandIds:m}=this.ioConfig,y=this._getBandSegmentCount(),g=[];let d=0;for(d=0;d<y;d++)(!m||m.indexOf[d]>-1)&&g.push(this.request(this._files.data,{range:{from:u[d].from,to:u[d].to},responseType:"array-buffer",signal:i.signal}));const p=await Promise.all(g),I=p.map(R=>R.data.byteLength).reduce((R,v)=>R+v),x=new Uint8Array(I);let k=0;for(d=0;d<y;d++)x.set(new Uint8Array(p[d].data),k),k+=p[d].data.byteLength;const T=ee.get(this.rasterInfo.storageInfo.compression).decoderFormat,_=await this.decodePixelBlock(x.buffer,{width:s,height:n,format:T,planes:(m==null?void 0:m.length)||o,pixelType:c});if(_==null)return null;if(C(this.rasterInfo.noDataValue)&&T!=="lerc"&&!_.mask){const R=this.rasterInfo.noDataValue[0];if(R!=null){const v=_.width*_.height,P=new Uint8Array(v);if(Math.abs(R)>1e24)for(d=0;d<v;d++)Math.abs((_.pixels[0][d]-R)/R)>1e-6&&(P[d]=1);else for(d=0;d<v;d++)_.pixels[0][d]!==R&&(P[d]=1);_.mask=P}}let S=0,F=0;if(h!==s||f!==n){let R=_.mask;if(R)for(d=0;d<n;d++)if(F=d*s,d<f)for(S=h;S<s;S++)R[F+S]=0;else for(S=0;S<s;S++)R[F+S]=0;else for(R=new Uint8Array(s*n),_.mask=R,d=0;d<f;d++)for(F=d*s,S=0;S<h;S++)R[F+S]=1}return _}_parseIndex(t){if(t.byteLength%16>0)throw new Error("invalid array buffer must be multiples of 16");let e,r,i,s,n,a;if(di){for(r=new Uint8Array(t),s=new ArrayBuffer(t.byteLength),i=new Uint8Array(s),n=0;n<t.byteLength/4;n++)for(a=0;a<4;a++)i[4*n+a]=r[4*n+3-a];e=new Uint32Array(s)}else e=new Uint32Array(t);return e}_getBandSegmentCount(){return ee.get(this.rasterInfo.storageInfo.compression).isOneSegment?1:this.rasterInfo.bandCount}_getTileLocation(t,e,r){const{blockWidth:i,blockHeight:s,pyramidScalingFactor:n}=this.rasterInfo.storageInfo,{width:a,height:l}=this.rasterInfo,o=this._getBandSegmentCount();let c,u,h,f=0,m=0;for(h=0;h<t;h++)m=n**h,c=Math.ceil(a/i/m),u=Math.ceil(l/s/m),f+=c*u;m=n**t,c=Math.ceil(a/i/m),u=Math.ceil(l/s/m),f+=e*c+r,f*=4*o;const y=this._storageIndex.subarray(f,f+4*o);let g=0,d=0;const p=[];for(let I=0;I<o;I++)g=y[4*I+0]*2**32+y[4*I+1],d=g+y[4*I+2]*2**32+y[4*I+3],p.push({from:g,to:d});return{ranges:p,actualTileWidth:r<c-1?i:Math.ceil(a/m)-i*(c-1),actualTileHeight:e<u-1?s:Math.ceil(l/m)-s*(u-1)}}_parseHeader(t){var P;const e=V(t,"MRF_META/Raster");if(!e)throw new $("mrf:open","not a valid MRF format");const r=V(e,"Size"),i=parseInt(r.getAttribute("x"),10),s=parseInt(r.getAttribute("y"),10),n=parseInt(r.getAttribute("c"),10),a=(K(e,"Compression")||"none").toLowerCase();if(!ee.has(a))throw new $("mrf:open","currently does not support compression "+a);const l=K(e,"DataType")||"UInt8",o=Y.get(l);if(o==null)throw new $("mrf:open","currently does not support pixel type "+l);const c=V(e,"PageSize"),u=parseInt(c.getAttribute("x"),10),h=parseInt(c.getAttribute("y"),10),f=V(e,"DataValues");let m,y;if(f&&(y=f.getAttribute("NoData"),y!=null&&(m=y.trim().split(" ").map(M=>parseFloat(M)))),V(t,"MRF_META/CachedSource"))throw new $("mrf:open","currently does not support MRF referencing other data files");const g=V(t,"MRF_META/GeoTags"),d=V(g,"BoundingBox");let p,I=!1;if(d!=null){const M=parseFloat(d.getAttribute("minx")),D=parseFloat(d.getAttribute("miny")),N=parseFloat(d.getAttribute("maxx")),O=parseFloat(d.getAttribute("maxy")),H=K(g,"Projection")||"";let L=j.WGS84;if(H!=="LOCAL_CS[]")if(H.toLowerCase().startsWith("epsg:")){const J=Number(H.slice(5));isNaN(J)||J===0||(L=new j({wkid:J}))}else L=(P=_e(H))!=null?P:j.WGS84;else I=!0,L=new j({wkid:3857});p=new G(M,D,N,O),p.spatialReference=L}else I=!0,p=new G({xmin:-.5,ymin:.5-s,xmax:i-.5,ymax:.5,spatialReference:new j({wkid:3857})});const x=V(t,"MRF_META/Rsets"),k=parseInt(x&&x.getAttribute("scale")||"2",10),T=p.spatialReference,_=new ye({origin:new q({x:p.xmin,y:p.ymax,spatialReference:T}),blockWidth:u,blockHeight:h,pyramidBlockWidth:u,pyramidBlockHeight:h,compression:a,pyramidScalingFactor:k}),S=new q({x:p.width/i,y:p.height/s,spatialReference:T}),F=new ge({width:i,height:s,extent:p,isPseudoSpatialReference:I,spatialReference:T,bandCount:n,pixelType:o,pixelSize:S,noDataValue:m,storageInfo:_}),R=K(t,"datafile"),v=K(t,"IndexFile");return{rasterInfo:F,files:{mrf:this.url,index:v||this.url.replace(".mrf",".idx"),data:R||this.url.replace(".mrf",ee.get(a).blobExtension)}}}async _fetchAuxiliaryData(t){try{const{data:e}=await this.request(this.url+".aux.xml",{responseType:"xml",signal:t==null?void 0:t.signal});return He(e)}catch{return null}}};w([b()],le.prototype,"_files",void 0),w([b()],le.prototype,"_storageIndex",void 0),w([b({type:String,json:{write:!0}})],le.prototype,"datasetFormat",void 0),le=w([Q("esri.layers.support.rasterIO.MRFRaster")],le);const qi=le,Oe=(t,e)=>{var r;return(r=t.get(e))==null?void 0:r.values},ue=(t,e)=>{var r,i;return(i=(r=t.get(e))==null?void 0:r.values)==null?void 0:i[0]};let ne=class extends oe{constructor(){super(...arguments),this._files=null,this._headerInfo=null,this._bufferSize=1048576,this.datasetFormat="TIFF"}async open(t){await this.init();const e=t?X(t.signal):null,{data:r}=await this.request(this.url,{range:{from:0,to:this._bufferSize},responseType:"array-buffer",signal:e});if(!r)throw new $("tiffraster:open","failed to open url "+this.url);this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1,this.url.lastIndexOf("."));const{littleEndian:i,firstIFDPos:s,isBigTiff:n}=mi(r),a=[];await this._readIFDs(a,r,i,s,0,n?8:4,e);const{imageInfo:l,rasterInfo:o}=this._parseIFDs(a),c=pi(a),u=yi(a);if(this._headerInfo={littleEndian:i,isBigTiff:n,ifds:a,pyramidIFDs:c,maskIFDs:u,...l},this._set("rasterInfo",o),!l.isSupported)throw new $("tiffraster:open","this tiff is not supported: "+l.message);if(!l.tileWidth)throw new $("tiffraster:open","none-tiled tiff is not optimized for access, convert to COG and retry.");const{skipExtensions:h=[]}=this.ioConfig;if(!h.includes("aux.xml")){const f=await this._fetchAuxiliaryMetaData(t);f!=null&&this._processPAMInfo(f,o)}h.includes("vat.dbf")||o.bandCount!==1||o.pixelType!=="u8"||(o.attributeTable=await this._fetchAuxiliaryTable(t),C(o.attributeTable)&&(o.keyProperties.DataType="thematic")),this.updateTileInfo()}async fetchRawTile(t,e,r,i={}){var n;if(!((n=this._headerInfo)!=null&&n.isSupported)||this.isBlockOutside(t,e,r))return null;const s=await this._fetchRawTiffTile(t,e,r,!1,i);if(C(s)&&this._headerInfo.hasMaskBand){const a=await this._fetchRawTiffTile(t,e,r,!0,i);C(a)&&a.pixels[0]instanceof Uint8Array&&(s.mask=a.pixels[0])}return s}_parseIFDs(t){var M,D;const e=gi(t),{width:r,height:i,tileWidth:s,tileHeight:n,planes:a,pixelType:l,compression:o,firstPyramidLevel:c,maximumPyramidLevel:u,pyramidBlockWidth:h,pyramidBlockHeight:f,tileBoundary:m,affine:y,metadata:g}=e,d=((M=e.extent.spatialReference)==null?void 0:M.wkt)||((D=e.extent.spatialReference)==null?void 0:D.wkid);let p=_e(d),I=!!e.isPseudoGeographic;p==null&&(I=!0,p=new j({wkid:3857}));const x=new G({...e.extent,spatialReference:p}),k=new q(x?{x:x.xmin,y:x.ymax,spatialReference:p}:{x:0,y:0}),T=new ye({blockWidth:s,blockHeight:n,pyramidBlockWidth:h,pyramidBlockHeight:f,compression:o,origin:k,firstPyramidLevel:c,maximumPyramidLevel:u,blockBoundary:m}),_=new q({x:(x.xmax-x.xmin)/r,y:(x.ymax-x.ymin)/i,spatialReference:p}),S=g?{BandProperties:g.bandProperties,DataType:g.dataType}:{};let F=null;const R=ue(t[0],"PHOTOMETRICINTERPRETATION"),v=Oe(t[0],"COLORMAP");if(R<=3&&(v==null?void 0:v.length)>3&&v.length%3==0){F=[];const N=v.length/3;for(let O=0;O<N;O++)F.push([O,v[O]>>>8,v[O+N]>>>8,v[O+2*N]>>>8])}const P=new ge({width:r,height:i,bandCount:a,pixelType:l,pixelSize:_,storageInfo:T,spatialReference:p,isPseudoSpatialReference:I,keyProperties:S,extent:x,colormap:F,statistics:g?g.statistics:null});return y!=null&&y.length&&(P.nativeExtent=new G({xmin:-.5,ymin:.5-i,xmax:r-.5,ymax:.5,spatialReference:p}),P.transform=new Ne({polynomialOrder:1,forwardCoefficients:[y[2]+y[0]/2,y[5]-y[3]/2,y[0],y[3],-y[1],-y[4]]}),P.extent=P.transform.forwardTransform(P.nativeExtent),P.pixelSize=new q({x:(x.xmax-x.xmin)/r,y:(x.ymax-x.ymin)/i,spatialReference:p}),T.origin.x=-.5,T.origin.y=.5),{imageInfo:e,rasterInfo:P}}_processPAMInfo(t,e){var r;if(e.statistics=(r=t.statistics)!=null?r:e.statistics,e.histograms=t.histograms,t.histograms&&B(e.statistics)&&(e.statistics=Je(t.histograms)),t.transform&&B(e.transform)){e.transform=t.transform,e.nativeExtent=e.extent;const i=e.transform.forwardTransform(e.nativeExtent);e.pixelSize=new q({x:(i.xmax-i.xmin)/e.width,y:(i.ymax-i.ymin)/e.height,spatialReference:e.spatialReference}),e.extent=i}e.isPseudoSpatialReference&&t.spatialReference&&(e.spatialReference=t.spatialReference)}async _readIFDs(t,e,r,i,s,n=4,a){if(!i)return null;(i>=e.byteLength||i<0)&&(e=(await this.request(this.url,{range:{from:i+s,to:i+s+this._bufferSize},responseType:"array-buffer",signal:a})).data,s=i+s,i=0);const l=await this._readIFD(e,r,i,s,we.TIFF_TAGS,n,a);if(t.push(l.ifd),!l.nextIFD)return null;await this._readIFDs(t,e,r,l.nextIFD-s,s,n,a)}async _readIFD(t,e,r,i,s=we.TIFF_TAGS,n=4,a){var o,c;if(!t)return null;const l=xi(t,e,r,i,s,n);if(l.success){const u=[];if((o=l.ifd)==null||o.forEach(h=>{h.values||u.push(h)}),u.length>0){const h=u.map(m=>m.offlineOffsetSize).filter(C),f=Math.min.apply(null,h.map(m=>m[0]));if(Math.min.apply(null,h.map(m=>m[0]+m[1]))-f<=this._bufferSize){const{data:m}=await this.request(this.url,{range:{from:f,to:f+this._bufferSize},responseType:"array-buffer",signal:a});t=m,i=f,u.forEach(y=>Ii(t,e,y,i))}}if((c=l.ifd)!=null&&c.has("GEOKEYDIRECTORY")){const h=l.ifd.get("GEOKEYDIRECTORY"),f=h==null?void 0:h.values;if(f&&f.length>4){const m=f[0]+"."+f[1]+"."+f[2],y=await this._readIFD(t,e,h.valueOffset+6-i,i,we.GEO_KEYS,2,a);h.data=y.ifd,h.data&&h.data.set("GEOTIFFVersion",{id:0,type:2,valueCount:1,valueOffset:null,values:[m]})}}return l}if(l.requiredBufferSize&&l.requiredBufferSize!==t.byteLength)return(t=(await this.request(this.url,{range:{from:i,to:i+l.requiredBufferSize+4},responseType:"array-buffer",signal:a})).data).byteLength<l.requiredBufferSize?null:this._readIFD(t,e,0,i,we.TIFF_TAGS,4,a)}async _fetchRawTiffTile(t,e,r,i,s={}){const n=this._getTileLocation(t,e,r,i);if(!n)return null;const{ranges:a,actualTileWidth:l,actualTileHeight:o,ifd:c}=n,u=a.map(_=>this.request(this.url,{range:_,responseType:"array-buffer",signal:s.signal})),h=await Promise.all(u),f=h.map(_=>_.data.byteLength).reduce((_,S)=>_+S),m=h.length===1?h[0].data:new ArrayBuffer(f),y=[0],g=[0];if(h.length>1){const _=new Uint8Array(m);for(let S=0,F=0;S<h.length;S++){const R=h[S].data;_.set(new Uint8Array(R),F),y[S]=F,F+=R.byteLength,g[S]=R.byteLength}}const{blockWidth:d,blockHeight:p}=this.getBlockWidthHeight(t),I=await this.decodePixelBlock(m,{format:"tiff",customOptions:{headerInfo:this._headerInfo,ifd:c,offsets:y,sizes:g},width:d,height:p,planes:null,pixelType:null});if(I==null)return null;let x,k,T;if(l!==d||o!==p){let _=I.mask;if(_)for(x=0;x<p;x++)if(T=x*d,x<o)for(k=l;k<d;k++)_[T+k]=0;else for(k=0;k<d;k++)_[T+k]=0;else for(_=new Uint8Array(d*p),I.mask=_,x=0;x<o;x++)for(T=x*d,k=0;k<l;k++)_[T+k]=1}return I}_getTileLocation(t,e,r,i=!1){const{firstPyramidLevel:s,blockBoundary:n}=this.rasterInfo.storageInfo,a=t===0?0:t-(s-1),{_headerInfo:l}=this;if(!l)return null;const o=i?l.maskIFDs[a]:a===0?l==null?void 0:l.ifds[0]:l==null?void 0:l.pyramidIFDs[a-1];if(!o)return null;const c=wi(o,l),u=Oe(o,"TILEOFFSETS");if(u===void 0)return null;const h=Oe(o,"TILEBYTECOUNTS"),{minRow:f,minCol:m,maxRow:y,maxCol:g}=n[a];if(e>y||r>g||e<f||r<m)return null;const d=ue(o,"IMAGEWIDTH"),p=ue(o,"IMAGELENGTH"),I=ue(o,"TILEWIDTH"),x=ue(o,"TILELENGTH"),k=c?this.rasterInfo.bandCount:1,T=k*e*(g+1)+r,_=[{from:u[T],to:u[T+k-1]+h[T+k-1]-1}];if(c){let R=!0;for(let v=0;v<k;v++)if(u[T+v]+h[T+v]!==u[T+v+1]){R=!1;break}if(!R)for(let v=0;v<k;v++)_[v]={from:u[T+v],to:u[T+v]+h[T+v]-1}}const S=u[T],F=h[T];return S==null||F==null?null:{ranges:_,ifd:o,actualTileWidth:r===g&&d%I||I,actualTileHeight:e===y&&p%x||x}}async _fetchAuxiliaryMetaData(t){try{const{data:e}=await this.request(this.url+".aux.xml",{responseType:"xml",signal:t==null?void 0:t.signal});return He(e)}catch{return null}}async _fetchAuxiliaryTable(t){try{const{data:e}=await this.request(this.url+".vat.dbf",{responseType:"array-buffer",signal:t==null?void 0:t.signal}),r=dt.parse(e);return r!=null&&r.recordSet?lt.fromJSON(r.recordSet):null}catch{return null}}};w([b()],ne.prototype,"_files",void 0),w([b()],ne.prototype,"_headerInfo",void 0),w([b()],ne.prototype,"_bufferSize",void 0),w([b({type:String,json:{write:!0}})],ne.prototype,"datasetFormat",void 0),ne=w([Q("esri.layers.support.rasterDatasets.TIFFRaster")],ne);const ji=ne,W=new Map;W.set("CRF",{desc:"Cloud Raster Format",constructor:Ji}),W.set("MRF",{desc:"Meta Raster Format",constructor:qi}),W.set("TIFF",{desc:"GeoTIFF",constructor:ji}),W.set("RasterTileServer",{desc:"Raster Tile Server",constructor:Wi}),W.set("JPG",{desc:"JPG Raster Format",constructor:Re}),W.set("PNG",{desc:"PNG Raster Format",constructor:Re}),W.set("GIF",{desc:"GIF Raster Format",constructor:Re}),W.set("BMP",{desc:"BMP Raster Format",constructor:Re});class Gi{static get supportedFormats(){const e=new Set;return W.forEach((r,i)=>e.add(i)),e}static async open(e){const{url:r,ioConfig:i,sourceJSON:s}=e;let n=e.datasetFormat;n==null&&r.lastIndexOf(".")&&(n=r.slice(r.lastIndexOf(".")+1).toUpperCase()),n==="OVR"||n==="TIF"?n="TIFF":n!=="JPG"&&n!=="JPEG"&&n!=="JFIF"||(n="JPG"),r.toLowerCase().includes("/imageserver")&&!r.toLowerCase().includes("/wcsserver")&&(n="RasterTileServer");const a={url:r,sourceJSON:s,datasetFormat:n,ioConfig:i!=null?i:{bandIds:null,sampling:null}};let l,o;if(n&&this.supportedFormats.has(n)){if(n==="CRF"&&!(i!=null&&i.enableCRF))throw new $("rasterfactory:open",`cannot open raster: ${r}`);return l=W.get(n).constructor,o=new l(a),await o.open({signal:e.signal}),o}if(n)throw new $("rasterfactory:open","not a supported format "+n);const c=Array.from(W.keys());let u=0;const h=()=>(n=c[u++],n&&(n!=="CRF"||(i==null?void 0:i.enableCRF))?(l=W.get(n).constructor,o=new l(a),o.open({signal:e.signal}).then(()=>o).catch(()=>h())):null);return h()}static register(e,r,i){W.has(e.toUpperCase())||W.set(e.toUpperCase(),{desc:r,constructor:i})}}let E=class extends Rt(vt(Tt(_t(kt(zi(Ct(Ft(Pt(Mt($t)))))))))){constructor(...t){super(...t),this._primaryRasters=null,this.bandIds=null,this.interpolation=null,this.legendEnabled=!0,this.isReference=null,this.listMode="show",this.sourceJSON=null,this.version=null,this.type="imagery-tile",this.operationalLayerType="ArcGISTiledImageServiceLayer",this.popupEnabled=!0,this.popupTemplate=null,this.fields=null}normalizeCtorArgs(t,e){return typeof t=="string"?{url:t,...e}:t}load(t){const e=C(t)?t.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"]},t).catch(Ot).then(()=>this._openRaster(e))),Promise.resolve(this)}get defaultPopupTemplate(){return this.createPopupTemplate()}get rasterFields(){var l;let t=[new me({name:"Raster.ServicePixelValue",alias:"Pixel Value",domain:null,editable:!1,length:50,type:"string"})];const{rasterInfo:e}=this,r=e==null?void 0:e.attributeTable,i=C(r)?r.fields:null,s="Raster.";if(i){const o=i.filter(c=>c.type!=="oid"&&c.name.toLowerCase()!=="value").map(c=>{const u=c.clone();return u.name=s+c.name,u});t=t.concat(o)}const n=e==null?void 0:e.dataType,a=e==null?void 0:e.multidimensionalInfo;if((n==="vector-magdir"||n==="vector-uv")&&C(a)){const o=(l=a.variables[0].unit)==null?void 0:l.trim(),c="Magnitude"+(o?` (${o})`:"");t.push(new me({name:"Raster.Magnitude",alias:c,domain:null,editable:!1,type:"double"})),t.push(new me({name:"Raster.Direction",alias:"Direction (\xB0)",domain:null,editable:!1,type:"double"}))}return t}set renderer(t){this._set("renderer",t),this.updateRenderer()}readRenderer(t,e,r){const i=e&&e.layerDefinition&&e.layerDefinition.drawingInfo&&e.layerDefinition.drawingInfo.renderer,s=Kt(i,r)||void 0;if(s!=null)return s}createPopupTemplate(t){return Bt({fields:this.rasterFields,title:this.title},t)}async generateRasterInfo(t,e){if(!(t=rt(Be,t)))return this._primaryRasters[0].rasterInfo;try{const r={raster:this._primaryRasters[0]};this._primaryRasters.length>1&&this._primaryRasters.forEach(n=>r[n.url]=n);const i=De(t.toJSON(),r),s=new ze({rasterFunction:i});return await s.open(e),s.rasterInfo}catch{return null}}write(t,e){const{raster:r}=this;if(this.loaded?r.datasetFormat==="RasterTileServer"&&(r.tileType==="Raster"||r.tileType==="Map"):this.url&&/\/ImageServer(\/|\/?$)/i.test(this.url))return super.write(t,e);if(e&&e.messages){const i=`${e.origin}/${e.layerContainerType||"operational-layers"}`;e.messages.push(new $("layer:unsupported",`Layers (${this.title}, ${this.id}) of type '${this.declaredClass}' are not supported in the context of '${i}'`,{layer:this}))}return null}async _openRaster(t){var i;let e=!1;if(this.raster)this.raster.rasterInfo||await this.raster.open(),this.raster.datasetFormat==="Function"?(e=!0,this._primaryRasters=this.raster.primaryRasters.rasters):this._primaryRasters=[this.raster],this.url=this.raster.url;else{const{rasterFunction:s}=this,n=[this.url];s&&Fi(s.toJSON(),n);const a=await Promise.all(n.map(o=>Gi.open({url:o,sourceJSON:this.sourceJSON,ioConfig:{sampling:"closest",...this.ioConfig,customFetchParameters:this.customParameters},signal:t}))),l=a.findIndex(o=>o==null);if(l>-1)throw new $("imagery-tile-layer:open",`cannot open raster: ${n[l]}`);if(this._primaryRasters=a,s){const o={raster:this._primaryRasters[0]};this._primaryRasters.length>1&&this._primaryRasters.forEach(h=>o[h.url]=h);const c=De((i=s.rasterFunctionDefinition)!=null?i:s.toJSON(),o),u=new ze({rasterFunction:c});try{await u.open(),this.raster=u}catch(h){const f=Ee.getLogger(this.declaredClass);h instanceof $&&f.error("imagery-tile-layer:open",h.message),f.warn("imagery-tile-layer:open","the raster function cannot be applied and is removed"),this._set("rasterFunction",null),this.raster=a[0]}}else this.raster=a[0]}const r=this.raster.rasterInfo;if(!r)throw new $("imagery-tile-layer:load","cannot load resources on "+this.url);if(this._set("rasterInfo",e?r:this._primaryRasters[0].rasterInfo),this._set("spatialReference",r.spatialReference),this.sourceJSON=this.sourceJSON||this.raster.sourceJSON,this.sourceJSON!=null){const s=this.raster.tileType==="Map"&&this.sourceJSON.minLOD!=null&&this.sourceJSON.maxLOD!=null?this.sourceJSON:{...this.sourceJSON,minScale:0,maxScale:0};this.read(s,{origin:"service"})}this.title||(this.title=this.raster.datasetName),this.raster.tileType==="Map"&&(this.popupEnabled=!1),this._configDefaultSettings(),this.addHandles(Dt(()=>this.customParameters,s=>{this.raster&&(this.raster.ioConfig.customFetchParameters=s)}))}};w([b()],E.prototype,"_primaryRasters",void 0),w([b({type:[zt],json:{write:{overridePolicy(){var t;return{enabled:!this.loaded||this.raster.tileType==="Raster"||((t=this.bandIds)==null?void 0:t.join(","))!=="0,1,2"}}}}})],E.prototype,"bandIds",void 0),w([b({json:{write:{overridePolicy(){return{enabled:!this.loaded||this.raster.tileType==="Raster"||this.interpolation!=="bilinear"}}}}}),Et(Qt)],E.prototype,"interpolation",void 0),w([b(Jt)],E.prototype,"legendEnabled",void 0),w([b({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],E.prototype,"isReference",void 0),w([b({type:["show","hide"]})],E.prototype,"listMode",void 0),w([b({json:{read:!0,write:!0}})],E.prototype,"blendMode",void 0),w([b()],E.prototype,"sourceJSON",void 0),w([b({readOnly:!0,json:{origins:{service:{read:{source:"currentVersion"}}}}})],E.prototype,"version",void 0),w([b({readOnly:!0,json:{read:!1}})],E.prototype,"type",void 0),w([b({type:["ArcGISTiledImageServiceLayer"]})],E.prototype,"operationalLayerType",void 0),w([b({type:Boolean,value:!0,json:{read:{source:"disablePopup",reader:(t,e)=>!e.disablePopup},write:{target:"disablePopup",overridePolicy(){return{enabled:!this.loaded||this.raster.tileType==="Raster"}},writer(t,e,r){e[r]=!t}}}})],E.prototype,"popupEnabled",void 0),w([b({type:Nt,json:{read:{source:"popupInfo"},write:{target:"popupInfo",overridePolicy(){return{enabled:!this.loaded||this.raster.tileType==="Raster"}}}}})],E.prototype,"popupTemplate",void 0),w([b({readOnly:!0})],E.prototype,"defaultPopupTemplate",null),w([b({readOnly:!0,type:[me]})],E.prototype,"fields",void 0),w([b({readOnly:!0,type:[me]})],E.prototype,"rasterFields",null),w([b({types:ft,json:{name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy(){var e;const t=((e=this.renderer)==null?void 0:e.type)==="raster-stretch"&&this.renderer.stretchType==="none"&&!this.renderer.useGamma;return{enabled:!this.loaded||this.raster.tileType==="Raster"||!t}}},origins:{"web-scene":{types:Zt,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:t=>({enabled:t&&t.type!=="vector-field"&&t.type!=="flow"})}}}}})],E.prototype,"renderer",null),w([Ht("renderer")],E.prototype,"readRenderer",null),E=w([Q("esri.layers.ImageryTileLayer")],E);const ts=E;export{ts as default};
