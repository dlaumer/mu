import{e as r,y as o,b as h,bW as k,bX as $,d as x,a as g,fR as P,x as v,r as m,g as R,dq as T,C as U,L as E,F as G}from"./index.f0b603e5.js";import{n as j}from"./StreamFeatureManager.36755ebd.js";import{createConnection as V}from"./createConnection.19b0ad4e.js";import{r as L}from"./EventedSet.ce63ca8d.js";import{w as C}from"./FeatureLikeLayerView3D.6f3f21f6.js";import{n as F}from"./LayerView3D.f82aec1c.js";import{u as N}from"./LayerView.37a25fbb.js";import"./dehydratedFeatureComparison.d06fa8a6.js";import"./queryForSymbologySnapping.33ba2abf.js";import"./elevationInfoUtils.1b829c91.js";import"./hash.079e8d2d.js";import"./Graphics3DObjectStates.e4779363.js";import"./optimizedFeatureQueryEngineAdapter.199b2146.js";import"./centroid.bdcfdd86.js";import"./PooledRBush.438dec3d.js";import"./quickselect.2c5f2780.js";import"./floorFilterUtils.4de71259.js";import"./QueryEngine.39a3740c.js";import"./QueryEngineResult.a34a99f5.js";import"./WhereClause.7eef08f1.js";import"./executionError.c4c51b90.js";import"./utils.a24099e7.js";import"./generateRendererUtils.8b94a88c.js";import"./json.5152e73f.js";import"./QueryEngineCapabilities.ea616409.js";import"./FeatureStore.c6298dd3.js";import"./BoundsStore.9aa448e8.js";import"./projectExtentUtils.8770a3e5.js";const z=2500;let p=class extends R{getObjectId(){return this.objectId}};r([o({type:Number,json:{read:!0}})],p.prototype,"objectId",void 0),p=r([h("esri.layers.graphics.controllers.StreamGraphic")],p);class B{constructor(e){this.onUpdate=e,this._idToGraphic=new Map}destroy(){this._idToGraphic.clear()}add(e){this._idToGraphic.set(e.objectId,e)}get(e){return this._idToGraphic.get(e)}forEach(e){this._idToGraphic.forEach(e)}removeById(e){const s=this._idToGraphic.get(e);return s?(s.sourceLayer=s.layer=null,this._idToGraphic.delete(e),s):null}update(e,s){this.onUpdate(e,s)}get size(){return this._idToGraphic.size}}let n=class extends k($(x)){constructor(){super(...arguments),this.isPaused=!1,this.graphics=new L,this._updateInfo={websocket:0,client:0},this._updateIntervalId=null,this._outSpatialReference=null}initialize(){this.addResolvingPromise(this.layer.when(()=>this._startup()))}destroy(){this.clear()}_clearInterval(){this._updateIntervalId!==null&&(clearInterval(this._updateIntervalId),this._updateIntervalId=null)}clear(){this._clearInterval(),this.connection=g(this.connection),this.store=g(this.store),this.graphics.clear(),this.handles.removeAll()}get updating(){return!this.connection||this.connection.connectionStatus==="connected"}_startup(){const{layer:t,layerView:e}=this,{spatialReference:s,definitionExpression:i,geometryDefinition:l,objectIdField:d,timeInfo:_,purgeOptions:I,maxReconnectionAttempts:w,maxReconnectionInterval:S,customParameters:u}=t,b=t.geometryType?P.toJSON(t.geometryType):null,O=s,y=e.view.spatialReference,M={geometry:l,where:i};this.clear(),this._set("connection",V(t.parsedUrl,O,y,b,M,w,S,u!=null?u:void 0)),this._outSpatialReference=y.toJSON(),this.store=new B(this._onUpdate.bind(this)),this.featuresManager=new j(this.store,d,_.toJSON(),I);const f="startup-watches";this.handles.remove(f),this.handles.add([t.on("send-message-to-socket",c=>this.connection.sendMessageToSocket(c)),t.on("send-message-to-client",c=>this.connection.sendMessageToClient(c)),this.connection.on("data-received",c=>this._onFeature(c)),this.connection.on("message-received",c=>this._onWebSocketMessage(c)),v(()=>[t.definitionExpression,t.geometryDefinition,t.purgeOptions],()=>this._startup())],f),this._initUpdateInterval()}_onWebSocketMessage(t){if(this.layerView.emit("message-received",t),"type"in t)switch(t.type){case"delete":if(t.objectIds)for(const e of t.objectIds)this.featuresManager.removeById(e);if(t.trackIds)for(const e of t.trackIds)this.featuresManager.removeByTrackId(e);break;case"clear":this.store.forEach(e=>this.featuresManager.removeById(e.objectId))}}_onFeature(t){this._updateInfo.websocket++,this.layerView.hasEventListener("data-received")&&this.layerView.emit("data-received",{attributes:t.attributes,centroid:t.centroid,geometry:t.geometry});try{m(t.geometry)&&!t.geometry.spatialReference&&(t.geometry.spatialReference=this._outSpatialReference);const e=p.fromJSON(t);e.sourceLayer=e.layer=this.layer,this.featuresManager.add(e)}catch{}}_onUpdate(t,e){m(e)&&this.graphics.removeMany(e),m(t)&&(this._updateInfo.client+=t.length,this.graphics.addMany(t))}_initUpdateInterval(){this._clearInterval();const{updateInterval:t}=this.layer;let e=performance.now();this._updateIntervalId=setInterval(()=>{const s=performance.now(),i=s-e;if(i>z){e=s;const l=Math.round(this._updateInfo.client/(i/1e3)),d=Math.round(this._updateInfo.websocket/(i/1e3));this._updateInfo.client=0,this._updateInfo.websocket=0,this.layerView.emit("update-rate",{client:l,websocket:d})}this.featuresManager.checkForUpdates()},t)}pauseStream(){this.isPaused=!0,this._clearInterval()}resumeStream(){this.isPaused=!1,this._initUpdateInterval()}};r([o()],n.prototype,"isPaused",void 0),r([o({constructOnly:!0})],n.prototype,"layer",void 0),r([o({constructOnly:!0})],n.prototype,"layerView",void 0),r([o()],n.prototype,"connection",void 0),r([o({readOnly:!0})],n.prototype,"updating",null),n=r([h("esri.layers.graphics.controllers.StreamController")],n);const J=t=>{let e=class extends t{constructor(...s){super(...s),this.connectionError=null,this.filter=null}get connectionStatus(){var s,i,l,d;return(s=this.controller)!=null&&s.isPaused?"paused":(d=(l=(i=this.controller)==null?void 0:i.connection)==null?void 0:l.connectionStatus)!=null?d:"disconnected"}};return r([o({readOnly:!0})],e.prototype,"connectionError",void 0),r([o({readOnly:!0})],e.prototype,"connectionStatus",null),r([o({type:T})],e.prototype,"filter",void 0),e=r([h("esri.layers.mixins.StreamLayerView")],e),e};let a=class extends J(C(F(N))){constructor(){super(...arguments),this.type="stream-3d",this.updatePolicy=U.ASYNC,this.hasZ=!0,this.hasM=!1,this._isUserPaused=!1}initialize(){this.handles.add(v(()=>this.suspended,t=>{this.controller&&(t?this.controller.pauseStream():this._isUserPaused||this.controller.resumeStream())}))}get connectionError(){const t=this.get("controller.connection.errorString");if(t)return new E("stream-controller",t)}pause(){this._isUserPaused=!0,this.controller.pauseStream()}resume(){this._isUserPaused=!1,this.controller.resumeStream()}createQuery(){return new G({outFields:["*"],returnGeometry:!0,outSpatialReference:this.view.spatialReference})}queryLatestObservations(t,e){return this.queryEngine.executeQueryForLatestObservations(this._ensureQuery(t),e==null?void 0:e.signal)}createController(){return new n({layer:this.layer,layerView:this})}beforeSetController(){}};r([o({readOnly:!0})],a.prototype,"updatePolicy",void 0),r([o({readOnly:!0})],a.prototype,"connectionError",null),r([o()],a.prototype,"controller",void 0),r([o({readOnly:!0})],a.prototype,"hasZ",void 0),r([o({readOnly:!0})],a.prototype,"hasM",void 0),a=r([h("esri.views.3d.layers.StreamLayerView3D")],a);const ve=a;export{ve as default};
