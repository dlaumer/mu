import{mi as m,a6 as n,j as l,t as d,e as i,y as e,iA as h,a as u}from"./index.f0143bd6.js";import{v as c}from"./I3SMeshView3D.42079d0b.js";import{n as g}from"./LayerView3D.8eabc277.js";import{u as y}from"./LayerView.6db58379.js";import"./I3SOverrides.6f8df0c1.js";import"./I3SNode.1cf5c7a0.js";import"./I3SUtil.4e641f44.js";import"./I3SBinaryReader.034d11bf.js";import"./RenderTexture.a7d6a19a.js";import"./FeatureLayerView3D.e73cf6b1.js";import"./FeatureLayerViewBase3D.f63bebc3.js";import"./FeatureLikeLayerView3D.c99efac6.js";import"./dehydratedFeatureComparison.13f4f597.js";import"./queryForSymbologySnapping.fff32977.js";import"./elevationInfoUtils.7e7fe510.js";import"./hash.079e8d2d.js";import"./Graphics3DObjectStates.c33d4d09.js";import"./rendererConversion.c11e603c.js";import"./optimizedFeatureQueryEngineAdapter.80f55770.js";import"./centroid.869e75fe.js";import"./PooledRBush.3515f326.js";import"./quickselect.2c5f2780.js";import"./floorFilterUtils.4de71259.js";import"./QueryEngine.5f539ff5.js";import"./QueryEngineResult.d691c7bb.js";import"./WhereClause.48310df0.js";import"./executionError.c4c51b90.js";import"./utils.ecbb20c7.js";import"./generateRendererUtils.fcfe376e.js";import"./json.5152e73f.js";import"./QueryEngineCapabilities.ea616409.js";import"./FeatureStore.368a7cb3.js";import"./BoundsStore.d65199ec.js";import"./projectExtentUtils.26266b5d.js";import"./EventedSet.124ad2c2.js";import"./popupUtils.20765062.js";import"./RefreshableLayerView.b76027da.js";import"./SceneModification.2eb80f61.js";import"./persistable.90520149.js";import"./multiOriginJSONSupportUtils.6105c957.js";import"./resourceExtension.12307e3a.js";import"./SceneLayerWorker.f44c8a70.js";const v=.2;let r=class extends c(g(y)){constructor(){super(...arguments),this.type="integrated-mesh-3d",this._elevationContext="im",this._isIntegratedMesh=!0,this._supportsLabeling=!1,this.drapeTargetType=m.WithoutRasterImage}get i3slayer(){return this.layer}get updatingProgressValue(){var t,o;return(o=(t=this._controller)==null?void 0:t.updatingProgress)!=null?o:0}get lodFactor(){var t,o,a,s,p;return(p=(s=(a=(o=(t=this.view)==null?void 0:t.qualitySettings)==null?void 0:o.sceneService)==null?void 0:a.integratedMesh)==null?void 0:s.lodFactor)!=null?p:1}get progressiveLoadFactor(){return this.lodFactor>=1?v:1}get layerPopupEnabled(){return!1}initialize(){this.updatingHandles.add(()=>this.layer.modifications,()=>this._loadModifications(),n),this.view.basemapTerrain.overlayManager.registerDrapeTarget(this)}destroy(){this.view.basemapTerrain.overlayManager.unregisterDrapeTarget(this)}_createLayerGraphic(){const t=new l;return t.layer=this.layer,t.sourceLayer=this.layer,t}canResume(){return super.canResume()&&(!this._controller||this._controller.rootNodeVisible)}_loadModifications(){if(this.handles.remove("modifications"),d(this.layer.modifications))return void(this._modifications=[]);const t=this.layer.modifications;this.handles.add(this.updatingHandles.addOnCollectionChange(()=>t,()=>this._modifications=t.toArray(),n),"modifications")}};i([e()],r.prototype,"layer",void 0),i([e()],r.prototype,"i3slayer",null),i([e(h)],r.prototype,"updatingProgress",void 0),i([e()],r.prototype,"updatingProgressValue",null),i([e()],r.prototype,"lodFactor",null),i([e({readOnly:!0})],r.prototype,"progressiveLoadFactor",null),r=i([u("esri.views.3d.layers.SceneLayerView3D")],r);const st=r;export{st as default};
