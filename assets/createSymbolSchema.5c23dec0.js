import{E as h,S}from"./TileInfoView.28d19e82.js";import{A as b,f as u,_ as V}from"./SymbolProcessor.b4dd6ef2.js";import"./index.f0143bd6.js";import"./cimAnalyzer.10562836.js";import"./fontUtils.cd6ab53b.js";import"./BidiEngine.f5b8c89f.js";import"./TileClipper.7b9dd3ce.js";import"./enums.89506096.js";import"./number.dcd3e86c.js";import"./Pipeline.1c8fb7f8.js";import"./QueryEngine.5f539ff5.js";import"./QueryEngineResult.d691c7bb.js";import"./WhereClause.48310df0.js";import"./executionError.c4c51b90.js";import"./utils.ecbb20c7.js";import"./generateRendererUtils.fcfe376e.js";import"./json.5152e73f.js";import"./QueryEngineCapabilities.ea616409.js";import"./StreamFeatureManager.56b14ea0.js";import"./quickselect.2c5f2780.js";import"./arcadeTimeUtils.e6723fba.js";import"./centroid.869e75fe.js";import"./ogcFeatureUtils.d8f7aad7.js";import"./geojson.1c3ff5a0.js";import"./clientSideDefaults.c93b26c1.js";import"./createConnection.3a050e52.js";import"./tileUtils.8eb8d4bc.js";import"./TurboLine.70307e99.js";import"./Rect.e8e4d18d.js";import"./GeometryUtils.6a2e733c.js";function y(e){var r;return e.type==="line-marker"?{type:"line-marker",color:(r=e.color)==null?void 0:r.toJSON(),placement:e.placement,style:e.style}:e.constructor.fromJSON(e.toJSON()).toJSON()}function f(e){return b(e)}function ee(e,r,t=!1){if(!e)return null;switch(e.type){case"simple-fill":case"picture-fill":return x(e,r,t);case"simple-marker":case"picture-marker":return g(e,r,t);case"simple-line":return K(e,r,t);case"text":return z(e,r,t);case"label":return d(e,r,t);case"cim":return{type:"cim",rendererKey:r.vvFlags,data:e.data,maxVVSize:r.maxVVSize};case"CIMSymbolReference":return{type:"cim",rendererKey:r.vvFlags,data:e,maxVVSize:r.maxVVSize};case"web-style":return{...y(e),type:"web-style",hash:e.hash(),rendererKey:r.vvFlags,maxVVSize:r.maxVVSize};default:throw new Error(`symbol not supported ${e.type}`)}}function d(e,r,t){const o=e.toJSON(),i=u(h.LABEL,{...r,placement:o.labelPlacement});return{materialKey:t?f(i):i,hash:e.hash(),...o,labelPlacement:o.labelPlacement}}function x(e,r,t){const o=u(h.FILL,r),i=t?f(o):o,m=e.clone(),a=m.outline,n=V(r.symbologyType);n||(m.outline=null);const s={materialKey:i,hash:m.hash(),...y(m)};if(n)return s;const p=[];if(p.push(s),a){const l=u(h.LINE,{...r,isOutline:!0}),c={materialKey:t?f(l):l,hash:a.hash(),...y(a)};p.push(c)}return{type:"composite-symbol",layers:p,hash:p.reduce((l,c)=>c.hash+l,"")}}function K(e,r,t){var p;const o=V(r.symbologyType)?S.DEFAULT:r.symbologyType,i=u(h.LINE,{...r,symbologyType:o}),m=t?f(i):i,a=e.clone(),n=a.marker;a.marker=null;const s=[];if(s.push({materialKey:m,hash:a.hash(),...y(a)}),n){const l=u(h.MARKER,r),c=t?f(l):l;n.color=(p=n.color)!=null?p:a.color,s.push({materialKey:c,hash:n.hash(),lineWidth:a.width,...y(n)})}return{type:"composite-symbol",layers:s,hash:s.reduce((l,c)=>c.hash+l,"")}}function g(e,r,t){const o=u(h.MARKER,r),i=t?f(o):o,m=y(e);return{materialKey:i,hash:e.hash(),...m,angle:e.angle,maxVVSize:r.maxVVSize}}function z(e,r,t){const o=u(h.TEXT,r),i=t?f(o):o,m=y(e);return{materialKey:i,hash:e.hash(),...m,angle:e.angle,maxVVSize:r.maxVVSize}}export{ee as createSymbolSchema};
