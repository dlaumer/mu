import{e as r,y as o,a as h,eN as k,dv as $,G as P,a7 as g,eS as T,am as v,r as m,j as U,jH as j,aj as x,d as R,z as E}from"./index.860f6be5.js";import{n as G}from"./StreamFeatureManager.1654fbb4.js";import{createConnection as V}from"./createConnection.40cd0299.js";import{r as C}from"./EventedSet.69be3431.js";import{w as L}from"./FeatureLikeLayerView3D.3d40ee16.js";import{n as N}from"./LayerView3D.c93bbaf7.js";import{u as F}from"./LayerView.9dc4bbd9.js";import"./dehydratedFeatureComparison.7a1329b9.js";import"./queryForSymbologySnapping.f65a67eb.js";import"./elevationInfoUtils.d616fc21.js";import"./hash.079e8d2d.js";import"./Graphics3DObjectStates.ad4da69f.js";import"./rendererConversion.5db8839f.js";import"./optimizedFeatureQueryEngineAdapter.116c262c.js";import"./centroid.72dc0856.js";import"./PooledRBush.1e3b3a37.js";import"./quickselect.2c5f2780.js";import"./floorFilterUtils.4de71259.js";import"./QueryEngine.a98bf7de.js";import"./QueryEngineResult.6fa14b32.js";import"./WhereClause.cf03b384.js";import"./executionError.c4c51b90.js";import"./utils.65890d90.js";import"./generateRendererUtils.6e89c565.js";import"./json.5152e73f.js";import"./QueryEngineCapabilities.ea616409.js";import"./FeatureStore.d784130d.js";import"./BoundsStore.9b2b5aa5.js";import"./projectExtentUtils.6fb0dbd3.js";const z=2500;let d=class extends U{getObjectId(){return this.objectId}};r([o({type:Number,json:{read:!0}})],d.prototype,"objectId",void 0),d=r([h("esri.layers.graphics.controllers.StreamGraphic")],d);class B{constructor(e){this.onUpdate=e,this._idToGraphic=new Map}destroy(){this._idToGraphic.clear()}add(e){this._idToGraphic.set(e.objectId,e)}get(e){return this._idToGraphic.get(e)}forEach(e){this._idToGraphic.forEach(e)}removeById(e){const s=this._idToGraphic.get(e);return s?(s.sourceLayer=s.layer=null,this._idToGraphic.delete(e),s):null}update(e,s){this.onUpdate(e,s)}get size(){return this._idToGraphic.size}}let a=class extends k($(P)){constructor(){super(...arguments),this.isPaused=!1,this.graphics=new C,this._updateInfo={websocket:0,client:0},this._updateIntervalId=null,this._outSpatialReference=null}initialize(){this.addResolvingPromise(this.layer.when(()=>this._startup()))}destroy(){this.clear()}_clearInterval(){this._updateIntervalId!==null&&(clearInterval(this._updateIntervalId),this._updateIntervalId=null)}clear(){this._clearInterval(),this.connection=g(this.connection),this.store=g(this.store),this.graphics.clear(),this.handles.removeAll()}get updating(){return!this.connection||this.connection.connectionStatus==="connected"}_startup(){const{layer:t,layerView:e}=this,{spatialReference:s,definitionExpression:i,geometryDefinition:l,objectIdField:p,timeInfo:_,purgeOptions:I,maxReconnectionAttempts:w,maxReconnectionInterval:S,customParameters:u}=t,b=t.geometryType?T.toJSON(t.geometryType):null,O=s,y=e.view.spatialReference,M={geometry:l,where:i};this.clear(),this._set("connection",V(t.parsedUrl,O,y,b,M,w,S,u!=null?u:void 0)),this._outSpatialReference=y.toJSON(),this.store=new B(this._onUpdate.bind(this)),this.featuresManager=new G(this.store,p,_.toJSON(),I);const f="startup-watches";this.handles.remove(f),this.handles.add([t.on("send-message-to-socket",c=>this.connection.sendMessageToSocket(c)),t.on("send-message-to-client",c=>this.connection.sendMessageToClient(c)),this.connection.on("data-received",c=>this._onFeature(c)),this.connection.on("message-received",c=>this._onWebSocketMessage(c)),v(()=>[t.definitionExpression,t.geometryDefinition,t.purgeOptions],()=>this._startup())],f),this._initUpdateInterval()}_onWebSocketMessage(t){if(this.layerView.emit("message-received",t),"type"in t)switch(t.type){case"delete":if(t.objectIds)for(const e of t.objectIds)this.featuresManager.removeById(e);if(t.trackIds)for(const e of t.trackIds)this.featuresManager.removeByTrackId(e);break;case"clear":this.store.forEach(e=>this.featuresManager.removeById(e.objectId))}}_onFeature(t){this._updateInfo.websocket++,this.layerView.hasEventListener("data-received")&&this.layerView.emit("data-received",{attributes:t.attributes,centroid:t.centroid,geometry:t.geometry});try{m(t.geometry)&&!t.geometry.spatialReference&&(t.geometry.spatialReference=this._outSpatialReference);const e=d.fromJSON(t);e.sourceLayer=e.layer=this.layer,this.featuresManager.add(e)}catch{}}_onUpdate(t,e){m(e)&&this.graphics.removeMany(e),m(t)&&(this._updateInfo.client+=t.length,this.graphics.addMany(t))}_initUpdateInterval(){this._clearInterval();const{updateInterval:t}=this.layer;let e=performance.now();this._updateIntervalId=setInterval(()=>{const s=performance.now(),i=s-e;if(i>z){e=s;const l=Math.round(this._updateInfo.client/(i/1e3)),p=Math.round(this._updateInfo.websocket/(i/1e3));this._updateInfo.client=0,this._updateInfo.websocket=0,this.layerView.emit("update-rate",{client:l,websocket:p})}this.featuresManager.checkForUpdates()},t)}pauseStream(){this.isPaused=!0,this._clearInterval()}resumeStream(){this.isPaused=!1,this._initUpdateInterval()}};r([o()],a.prototype,"isPaused",void 0),r([o({constructOnly:!0})],a.prototype,"layer",void 0),r([o({constructOnly:!0})],a.prototype,"layerView",void 0),r([o()],a.prototype,"connection",void 0),r([o({readOnly:!0})],a.prototype,"updating",null),a=r([h("esri.layers.graphics.controllers.StreamController")],a);const J=t=>{let e=class extends t{constructor(...s){super(...s),this.connectionError=null,this.filter=null}get connectionStatus(){var s,i,l,p;return(s=this.controller)!=null&&s.isPaused?"paused":(p=(l=(i=this.controller)==null?void 0:i.connection)==null?void 0:l.connectionStatus)!=null?p:"disconnected"}};return r([o({readOnly:!0})],e.prototype,"connectionError",void 0),r([o({readOnly:!0})],e.prototype,"connectionStatus",null),r([o({type:j})],e.prototype,"filter",void 0),e=r([h("esri.layers.mixins.StreamLayerView")],e),e};let n=class extends J(L(N(F))){constructor(){super(...arguments),this.type="stream-3d",this.updatePolicy=x.ASYNC,this.hasZ=!0,this.hasM=!1,this._isUserPaused=!1}initialize(){this.handles.add(v(()=>this.suspended,t=>{this.controller&&(t?this.controller.pauseStream():this._isUserPaused||this.controller.resumeStream())}))}get connectionError(){const t=this.get("controller.connection.errorString");if(t)return new R("stream-controller",t)}pause(){this._isUserPaused=!0,this.controller.pauseStream()}resume(){this._isUserPaused=!1,this.controller.resumeStream()}createQuery(){return new E({outFields:["*"],returnGeometry:!0,outSpatialReference:this.view.spatialReference})}queryLatestObservations(t,e){return this.queryEngine.executeQueryForLatestObservations(this._ensureQuery(t),e==null?void 0:e.signal)}createController(){return new a({layer:this.layer,layerView:this})}beforeSetController(){}};r([o({readOnly:!0})],n.prototype,"updatePolicy",void 0),r([o({readOnly:!0})],n.prototype,"connectionError",null),r([o()],n.prototype,"controller",void 0),r([o({readOnly:!0})],n.prototype,"hasZ",void 0),r([o({readOnly:!0})],n.prototype,"hasM",void 0),n=r([h("esri.views.3d.layers.StreamLayerView3D")],n);const _e=n;export{_e as default};
